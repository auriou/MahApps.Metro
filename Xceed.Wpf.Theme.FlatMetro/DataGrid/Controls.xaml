<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:conv="clr-namespace:Xceed.Wpf.DataGrid.Converters;assembly=Xceed.Wpf.DataGrid"
                    xmlns:ctrl="clr-namespace:Xceed.Wpf.DataGrid;assembly=Xceed.Wpf.DataGrid"
                    xmlns:ssv="clr-namespace:Xceed.Wpf.DataGrid.Views;assembly=Xceed.Wpf.DataGrid"
                    xmlns:xcdg="clr-namespace:Xceed.Wpf.DataGrid;assembly=Xceed.Wpf.DataGrid">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Xceed.Wpf.DataGrid;component\themes/Common/TableflowView.GridElementTemplates.xaml" />
        <ResourceDictionary Source="Brushes.xaml" />
        <ResourceDictionary Source="Shared.xaml" />
        <ResourceDictionary Source="Graphics.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="tableflowViewMetroRowSelectorPaneStyle" TargetType="{x:Type xcdg:RowSelectorPane}">

        <Setter Property="Panel.Background" Value="{StaticResource defaultBackgroundBrush}" />
        <Setter Property="TextElement.Foreground" Value="{StaticResource defaultForegroundBrush}" />
    </Style>
    <Style x:Key="tableflowViewMetroTableViewScrollViewerStyle" TargetType="{x:Type ssv:TableViewScrollViewer}">

        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ssv:TableViewScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid Margin="{TemplateBinding Control.Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <xcdg:RowSelectorPane Name="PART_RowSelectorPane"
                                                  Grid.Row="0"
                                                  Grid.RowSpan="3"
                                                  Grid.Column="0"
                                                  Width="{TemplateBinding ssv:TableViewScrollViewer.RowSelectorPaneWidth}"
                                                  Style="{StaticResource tableflowViewMetroRowSelectorPaneStyle}" />
                            <ssv:SynchronizedScrollViewer Name="fixedHeaderScrollViewer"
                                                          Grid.Row="0"
                                                          Grid.Column="1"
                                                          Focusable="False"
                                                          RenderOptions.EdgeMode="Aliased"
                                                          ssv:DataGridScrollViewer.SynchronizedScrollViewerPosition="Top">
                                <ssv:TableViewHeaderFooterPanel HorizontalAlignment="Left"
                                                                Orientation="Vertical"
                                                                xcdg:DataGridControl.IsFixedHeadersHost="True" />
                            </ssv:SynchronizedScrollViewer>
                            <ssv:SynchronizedScrollViewer Name="fixedFooterScrollViewer"
                                                          Grid.Row="2"
                                                          Grid.Column="1"
                                                          Focusable="False"
                                                          ssv:DataGridScrollViewer.SynchronizedScrollViewerPosition="Bottom">
                                <ssv:TableViewHeaderFooterPanel HorizontalAlignment="Left"
                                                                Orientation="Vertical"
                                                                xcdg:DataGridControl.IsFixedFootersHost="True" />
                            </ssv:SynchronizedScrollViewer>
                            <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                                    Grid.Row="1"
                                                    Grid.Column="1"
                                                    CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" />
                        </Grid>
                        <ScrollBar Name="PART_HorizontalScrollBar"
                                   Grid.Row="1"
                                   Grid.Column="0"
                                   Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
                                   Orientation="Horizontal"
                                   ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                                   Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"
                                   Value="{TemplateBinding ScrollViewer.HorizontalOffset}" />
                        <ScrollBar Name="PART_VerticalScrollBar"
                                   Grid.Row="0"
                                   Grid.Column="1"
                                   Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                                   Orientation="Vertical"
                                   ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                                   Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"
                                   Value="{TemplateBinding ScrollViewer.VerticalOffset}" />
                        <xcdg:ScrollTip Content="{x:Null}"
                                        ContentTemplate="{Binding RelativeSource={RelativeSource Self},
                                                                  Path=(xcdg:DataGridControl.DataGridContext).ScrollTipContentTemplate}"
                                        ContentTemplateSelector="{Binding RelativeSource={RelativeSource Self},
                                                                          Path=(xcdg:DataGridControl.DataGridContext).ScrollTipContentTemplateSelector}"
                                        Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ssv:TableViewScrollViewer.ShowRowSelectorPane" Value="False">
                            <Setter TargetName="PART_RowSelectorPane" Property="UIElement.Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="tableflowViewMetroDefaultValuesStyle" TargetType="{x:Type ssv:TableflowView}">
        <Setter Property="ssv:TableView.HorizontalGridLineBrush" Value="#00FFFFFF" />
        <Setter Property="ssv:TableView.HorizontalGridLineThickness" Value="0" />
        <Setter Property="ssv:TableView.GroupLevelIndicatorWidth" Value="20" />
        <Setter Property="ssv:TableView.DetailIndicatorWidth" Value="35" />
        <Setter Property="ssv:TableflowView.ContainerHeight" Value="30" />
        <Setter Property="ssv:UIViewBase.DefaultDropMarkPen">
            <Setter.Value>
                <Pen Brush="{StaticResource defaultForegroundBrush}" Thickness="6" />
            </Setter.Value>
        </Setter>
        <Setter Property="ssv:ViewBase.AscendingSortGlyph" Value="{StaticResource metroAscendingSortGlyph}" />
        <Setter Property="ssv:ViewBase.DescendingSortGlyph" Value="{StaticResource metroDescendingSortGlyph}" />
        <Setter Property="ssv:ViewBase.ExpandGroupGlyph" Value="{StaticResource metroExpandGroupGlyph}" />
        <Setter Property="ssv:ViewBase.CollapseGroupGlyph" Value="{StaticResource metroCollapseGroupGlyph}" />
        <Setter Property="ssv:UIViewBase.CurrentItemGlyph" Value="{StaticResource metroCurrentItemGlyph}" />
        <Setter Property="ssv:UIViewBase.EditingRowGlyph" Value="{StaticResource metroEditingRowGlyph}" />
        <Setter Property="ssv:UIViewBase.ValidationErrorGlyph" Value="{StaticResource metroValidationErrorGlyph}" />
        <Setter Property="ssv:UIViewBase.ConnectionStateLoadingGlyph" Value="{StaticResource connectionStateLoadingGlyph}" />
        <Setter Property="ssv:UIViewBase.ConnectionStateCommittingGlyph" Value="{StaticResource connectionStateLoadingGlyph}" />
        <Setter Property="ssv:UIViewBase.ConnectionStateErrorGlyph" Value="{StaticResource connectionStateErrorGlyph}" />
    </Style>
    <Style x:Key="cellErrorStyle" TargetType="{x:Type xcdg:Cell}">
        <Setter Property="Control.Background" Value="{StaticResource errorBackgroundBrush}" />
        <Setter Property="Control.Foreground" Value="{StaticResource errorForegroundBrush}" />
        <Setter Property="FrameworkElement.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=ValidationError.ErrorContent}" />
        <Style.Triggers>
            <Trigger Property="xcdg:Cell.IsValidationErrorRestrictive" Value="True">
                <Setter Property="Control.Background" Value="{StaticResource errorBackgroundBrush}" />
            </Trigger>
            <Trigger Property="xcdg:Cell.IsValidationErrorRestrictive" Value="False">
                <Setter Property="Control.Foreground" Value="{StaticResource warningForegroundBrush}" />
                <Setter Property="Control.Background" Value="{StaticResource warningBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="metroTableflowViewDataGridControlTemplate" TargetType="{x:Type xcdg:DataGridControl}">
        <Grid>
            <Border Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}">
                <AdornerDecorator Name="PART_DragDropAdornerDecorator">
                    <ssv:TableViewScrollViewer Name="PART_ScrollViewer"
                                               Padding="{TemplateBinding Control.Padding}"
                                               RowSelectorPaneWidth="{Binding RelativeSource={RelativeSource Self},
                                                                              Path=(xcdg:DataGridControl.DataGridContext).RowSelectorPaneWidth}"
                                               ShowRowSelectorPane="{Binding RelativeSource={RelativeSource Self},
                                                                             Path=(xcdg:DataGridControl.DataGridContext).ShowRowSelectorPane}"
                                               Style="{StaticResource tableflowViewMetroTableViewScrollViewerStyle}">
                        <ssv:TableflowViewItemsHost />
                    </ssv:TableViewScrollViewer>
                </AdornerDecorator>
            </Border>
            <Grid Name="connectionStateGrid"
                  Width="30"
                  Height="30"
                  Margin="0,0,25,25"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Bottom">
                <ContentPresenter Name="connectionStateLoadingContentPresenter"
                                  Content="{TemplateBinding xcdg:DataGridControl.ConnectionState}"
                                  ContentTemplate="{Binding RelativeSource={RelativeSource Self},
                                                            Path=(xcdg:DataGridControl.DataGridContext).ConnectionStateLoadingGlyph}"
                                  Visibility="Collapsed" />
                <ContentPresenter Name="connectionStateCommittingContentPresenter"
                                  Content="{TemplateBinding xcdg:DataGridControl.ConnectionState}"
                                  ContentTemplate="{Binding RelativeSource={RelativeSource Self},
                                                            Path=(xcdg:DataGridControl.DataGridContext).ConnectionStateCommittingGlyph}"
                                  Visibility="Collapsed" />
                <ContentPresenter Name="connectionStateErrorContentPresenter"
                                  Content="{TemplateBinding xcdg:DataGridControl.ConnectionState}"
                                  ContentTemplate="{Binding RelativeSource={RelativeSource Self},
                                                            Path=(xcdg:DataGridControl.DataGridContext).ConnectionStateErrorGlyph}"
                                  Visibility="Collapsed" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).IsConnectionStateGlyphEnabled}" Value="False">
                <Setter TargetName="connectionStateGrid" Property="UIElement.Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).DataGridControl.ConnectionState}" Value="Loading">
                <Setter TargetName="connectionStateLoadingContentPresenter" Property="UIElement.Visibility" Value="Visible" />
                <Setter TargetName="connectionStateErrorContentPresenter" Property="UIElement.Visibility" Value="Collapsed" />
                <Setter TargetName="connectionStateCommittingContentPresenter" Property="UIElement.Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).DataGridControl.ConnectionState}" Value="Committing">
                <Setter TargetName="connectionStateLoadingContentPresenter" Property="UIElement.Visibility" Value="Collapsed" />
                <Setter TargetName="connectionStateErrorContentPresenter" Property="UIElement.Visibility" Value="Collapsed" />
                <Setter TargetName="connectionStateCommittingContentPresenter" Property="UIElement.Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).DataGridControl.ConnectionState}" Value="Error">
                <Setter TargetName="connectionStateLoadingContentPresenter" Property="UIElement.Visibility" Value="Collapsed" />
                <Setter TargetName="connectionStateErrorContentPresenter" Property="UIElement.Visibility" Value="Visible" />
                <Setter TargetName="connectionStateCommittingContentPresenter" Property="UIElement.Visibility" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="tableFlowViewMetroGridControlStyle" TargetType="{x:Type xcdg:DataGridControl}">
        <Style.Resources>
            <Style x:Key="{x:Type RadioButton}"
                   BasedOn="{StaticResource metroRadioButton}"
                   TargetType="{x:Type RadioButton}" />
            <Style x:Key="{x:Type CheckBox}"
                   BasedOn="{StaticResource metroCheckBox}"
                   TargetType="{x:Type CheckBox}" />
            <Style x:Key="{x:Type Expander}"
                   BasedOn="{StaticResource metroExpander}"
                   TargetType="{x:Type Expander}" />
            <Style x:Key="{x:Type ScrollBar}"
                   BasedOn="{StaticResource metroScrollBar}"
                   TargetType="{x:Type ScrollBar}" />
            <Style x:Key="{x:Type Button}"
                   BasedOn="{StaticResource metroButton}"
                   TargetType="{x:Type Button}" />
            <Style x:Key="{x:Type ComboBox}"
                   BasedOn="{StaticResource metroComboBox}"
                   TargetType="{x:Type ComboBox}" />
            <Style x:Key="{x:Type xcdg:DataGridDatePicker}"
                   BasedOn="{StaticResource metroDatePicker}"
                   TargetType="{x:Type xcdg:DataGridDatePicker}" />
        </Style.Resources>
        <Setter Property="Control.BorderBrush" Value="{StaticResource defaultForegroundBrush}" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.Background" Value="{StaticResource defaultBackgroundBrush}" />
        <Setter Property="Control.Foreground" Value="{StaticResource defaultForegroundBrush}" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="xcdg:DataGridControl.CellErrorStyle" Value="{StaticResource cellErrorStyle}" />
        <Setter Property="Control.Template" Value="{StaticResource metroTableflowViewDataGridControlTemplate}" />
    </Style>
    <Style x:Key="tableFlowViewMetroRowStyle" TargetType="{x:Type xcdg:Row}">

        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource tableflowViewRowFocusVisualStyle}" />
        <Setter Property="xcdg:Row.SelectionBackground" Value="{StaticResource MetroAccentColorBrush}" />
        <Setter Property="xcdg:Row.SelectionForeground" Value="{StaticResource lightBrush}" />
        <Setter Property="xcdg:Row.InactiveSelectionBackground" Value="{StaticResource rowSelectionBackgroundBrush}" />
        <Setter Property="xcdg:Row.InactiveSelectionForeground" Value="{StaticResource defaultForegroundBrush}" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="Control.Template" Value="{StaticResource tableflowViewRowTemplate}" />
        <Setter Property="Control.Background" Value="{StaticResource defaultBackgroundBrush}" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).IsAlternatingRowStyleEnabled}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridVirtualizingPanel.ItemIndex), Converter={x:Static conv:IndexToOddConverter.Singleton}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Control.Background" Value="{StaticResource rowAlternatingBackgroundBrush}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="tableFlowViewMetroDataRowStyle"
           BasedOn="{StaticResource tableFlowViewMetroRowStyle}"
           TargetType="{x:Type xcdg:DataRow}">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).DataGridControl.SelectionUnit}" Value="Row" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Control.Background" Value="{StaticResource rowSelectionBackgroundBrush}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="tableflowViewColumnManagerRowTemplate" TargetType="{x:Type xcdg:ColumnManagerRow}">
        <ControlTemplate.Resources>
            <conv:ThicknessConverter x:Key="thicknessConverter" InverseValue="True" />
        </ControlTemplate.Resources>
        <Grid Name="rootGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border Name="rootBorder"
                    Grid.Column="1"
                    Grid.ColumnSpan="3"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Padding="{TemplateBinding Control.Padding}"
                    ssv:TableView.CanScrollHorizontally="False" />
            <xcdg:HierarchicalGroupLevelIndicatorPane Grid.Column="0"
                                                      Background="{TemplateBinding Control.Background}"
                                                      ssv:TableView.CanScrollHorizontally="False" />
            <xcdg:GroupLevelIndicatorPane Name="groupLevelIndicatorPane"
                                          Grid.Column="1"
                                          Background="{TemplateBinding Control.Background}"
                                          ssv:TableView.CanScrollHorizontally="False" />
            <Button Name="detailsToggle"
                    Grid.Column="2"
                    Margin="2,4,2,0"
                    VerticalAlignment="Top"
                    Command="{x:Static xcdg:DataGridCommands.ToggleDetailExpansion}"
                    Focusable="False"
                    OverridesDefaultStyle="True"
                    Template="{StaticResource detailsExpanderButtonTemplate}"
                    Visibility="Collapsed"
                    ssv:TableView.CanScrollHorizontally="False" />
            <Decorator Name="indentationDecorator" Grid.Column="3">
                <ssv:FixedCellPanel Name="PART_CellsHost"
                                    Margin="{TemplateBinding Control.BorderThickness}"
                                    ColumnStretchMinWidth="{Binding RelativeSource={RelativeSource Self},
                                                                    Path=(xcdg:DataGridControl.DataGridContext).ColumnStretchMinWidth}"
                                    ColumnStretchMode="{Binding RelativeSource={RelativeSource Self},
                                                                Path=(xcdg:DataGridControl.DataGridContext).ColumnStretchMode}"
                                    FixedCellCount="{Binding RelativeSource={RelativeSource Self},
                                                             Path=(xcdg:DataGridControl.DataGridContext).FixedColumnCount,
                                                             Mode=TwoWay}"
                                    FixedColumnDropMarkPen="{Binding RelativeSource={RelativeSource Self},
                                                                     Path=(xcdg:DataGridControl.DataGridContext).FixedColumnDropMarkPen}" />
            </Decorator>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).HasDetails}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).AllowDetailToggle}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="detailsToggle" Property="UIElement.Visibility" Value="Hidden" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="tableFlowViewMetroColumnManagerRowStyle"
           BasedOn="{StaticResource tableFlowViewMetroRowStyle}"
           TargetType="{x:Type xcdg:ColumnManagerRow}">
        <Setter Property="Control.Background" Value="{StaticResource MetroAccentColorBrush}" />
        <Setter Property="Control.Foreground" Value="{StaticResource lightBrush}" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource defaultBackgroundBrush}" />
        <Setter Property="Control.BorderThickness" Value="0,0,0,1" />
        <Setter Property="xcdg:RowSelector.Visible" Value="False" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Padding" Value="15" />
        <Setter Property="Control.Template" Value="{StaticResource tableflowViewColumnManagerRowTemplate}" />
        <Style.Triggers>
            <Trigger Property="xcdg:GroupLevelIndicatorPane.GroupLevel" Value="-1">
                <Setter Property="xcdg:GroupLevelIndicatorPane.ShowIndicators" Value="False" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="tableFlowViewMetroCellStyle" TargetType="{x:Type xcdg:Cell}">
        <Setter Property="xcdg:Cell.CurrentBackground" Value="{StaticResource defaultBackgroundBrush}" />
        <Setter Property="xcdg:Cell.CurrentForeground" Value="{StaticResource defaultForegroundBrush}" />
        <Setter Property="Control.Background" Value="#00FFFFFF" />
        <Setter Property="FrameworkElement.Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=ParentColumn.ActualWidth}" />
        <Setter Property="Control.Padding" Value="{StaticResource CellPadding}" />
        <Setter Property="Control.BorderThickness" Value="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).VerticalGridLineThickness, Converter={StaticResource thicknessConverter}, ConverterParameter=Right}" />
        <Setter Property="Control.BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).VerticalGridLineBrush}" />
        <Setter Property="Control.Template" Value="{StaticResource tableflowViewCellTemplate}" />
    </Style>
    <Style x:Key="tableFlowViewMetroDataCellStyle"
           BasedOn="{StaticResource tableFlowViewMetroCellStyle}"
           TargetType="{x:Type xcdg:DataCell}">
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="Control.Padding" Value="{StaticResource CellPadding}" />
    </Style>
    <Style x:Key="invisibleThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="FrameworkElement.MinWidth" Value="{DynamicResource {x:Static SystemParameters.ResizeFrameVerticalBorderWidthKey}}" />
        <Setter Property="FrameworkElement.MinHeight" Value="{DynamicResource {x:Static SystemParameters.ResizeFrameHorizontalBorderHeightKey}}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Background="#00FFFFFF" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="tableflowViewColumnManagerCellTemplate" TargetType="{x:Type ctrl:ColumnManagerCell}">
        <Grid>
            <Border Name="rootBorder"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}">
                <Grid>
                    <DockPanel>
                        <Border Name="thumbToggleBackgroundBorder" DockPanel.Dock="Right">
                            <Grid>
                                <Border Name="toggleDelimeterBorder"
                                        Margin="0,4,0,4"
                                        Background="#00FFFFFF"
                                        BorderBrush="{StaticResource lightBrush}"
                                        BorderThickness="1,0,0,0"
                                        Visibility="Collapsed" />
                                <Border Name="borderToggleBackground"
                                        Margin="1,0,1,0"
                                        Background="{TemplateBinding Control.Background}" />
                                <ToggleButton Name="toggleButton"
                                              Margin="2,0,0,0"
                                              VerticalAlignment="Stretch"
                                              Focusable="False"
                                              Opacity="0.5"
                                              Visibility="Collapsed" />
                            </Grid>
                        </Border>
                        <Border Background="{TemplateBinding Control.Background}">
                            <Grid>
                                <Border Padding="{TemplateBinding Control.Padding}">
                                    <Grid Name="contentPanel"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <xcdg:CellContentPresenter Name="PART_CellContentPresenter" Grid.Column="0" />
                                        <ContentPresenter Name="sortGlyphPresenter"
                                                          Grid.Column="1"
                                                          Content="{x:Null}"
                                                          ContentTemplate="{x:Null}" />
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </DockPanel>
                </Grid>
            </Border>
            <Thumb Name="PART_ColumnResizerThumbLeft"
                   Width="6"
                   HorizontalAlignment="Left"
                   Style="{StaticResource invisibleThumbStyle}" />
            <Thumb Name="PART_ColumnResizerThumb"
                   Width="6"
                   HorizontalAlignment="Right"
                   Style="{StaticResource invisibleThumbStyle}" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=toggleButton, Path=Visibility}" Value="Visible" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=HorizontalContentAlignment}" Value="Center" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_CellContentPresenter" Property="FrameworkElement.Margin" Value="16,0,0,0" />
            </MultiDataTrigger>
            <Trigger SourceName="toggleButton" Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="toggleButton" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger Property="xcdg:ColumnManagerCell.IsBeingDragged" Value="True">
                <Setter TargetName="borderToggleBackground" Property="FrameworkElement.Margin" Value="0,0,1,0" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="rootBorder" Property="Border.Background" Value="{StaticResource AccentHoverBrush}" />
            </Trigger>
            <Trigger Property="xcdg:ColumnManagerCell.IsPressed" Value="True">
                <Setter TargetName="rootBorder" Property="Border.Background" Value="{StaticResource AccentPressedBrush}" />
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ParentColumn.SortDirection}" Value="Ascending">
                <Setter TargetName="sortGlyphPresenter" Property="ContentPresenter.ContentTemplate" Value="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).AscendingSortGlyph}" />
                <Setter TargetName="sortGlyphPresenter" Property="FrameworkElement.Margin" Value="6,0,0,0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ParentColumn.SortDirection}" Value="Descending">
                <Setter TargetName="sortGlyphPresenter" Property="ContentPresenter.ContentTemplate" Value="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).DescendingSortGlyph}" />
                <Setter TargetName="sortGlyphPresenter" Property="FrameworkElement.Margin" Value="6,0,0,0" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ParentColumn.HasFixedWidth}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).RemoveColumnStretchingOnResize}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_ColumnResizerThumb" Property="UIElement.IsEnabled" Value="False" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ParentColumn.PreviousVisibleColumn.HasFixedWidth}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).RemoveColumnStretchingOnResize}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_ColumnResizerThumbLeft" Property="UIElement.IsEnabled" Value="False" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ParentRow.AllowColumnResize}" Value="False">
                <Setter TargetName="PART_ColumnResizerThumb" Property="UIElement.IsEnabled" Value="False" />
                <Setter TargetName="PART_ColumnResizerThumbLeft" Property="UIElement.IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ParentColumn.Visible}" Value="False">
                <Setter Property="UIElement.Visibility" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="tableFlowViewMetroColumnManagerCellStyle" TargetType="{x:Type xcdg:ColumnManagerCell}">
        <Setter Property="Control.Background" Value="#00FFFFFF" />
        <Setter Property="FrameworkElement.Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=ParentColumn.ActualWidth}" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="Control.Padding" Value="{StaticResource CellPadding}" />
        <Setter Property="Control.FontSize" Value="{StaticResource HeaderFontSize}" />
        <Setter Property="FrameworkElement.Height" Value="30" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="Control.Template" Value="{StaticResource tableflowViewColumnManagerCellTemplate}" />
        <Style.Triggers>
            <Trigger Property="xcdg:ColumnManagerCell.IsBeingDragged" Value="True">
                <Setter Property="Control.Background" Value="{StaticResource MetroAccentColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="tableflowViewMetroDetailIndicatorStyle" TargetType="{x:Type xcdg:DetailIndicator}">
        <Setter Property="Control.Background" Value="{x:Null}" />
        <Setter Property="FrameworkElement.Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).DetailIndicatorWidth}" />
        <Setter Property="Control.Template" Value="{StaticResource tableflowViewDetailIndicatorTemplate}" />
    </Style>
    <ControlTemplate x:Key="tableflowViewMetroGroupByControlTemplate" TargetType="{x:Type xcdg:GroupByControl}">
        <Border Background="{TemplateBinding Control.Background}"
                BorderBrush="{TemplateBinding Control.BorderBrush}"
                BorderThickness="{TemplateBinding Control.BorderThickness}"
                Padding="{TemplateBinding Control.Padding}">
            <Grid>
                <ContentPresenter Name="noGroupContentPresenter"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding xcdg:GroupByControl.NoGroupContent}"
                                  Visibility="Collapsed" />
                <ItemsPresenter />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ItemsControl.HasItems" Value="False">
                <Setter TargetName="noGroupContentPresenter" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="tableflowViewMetroGroupByControlStyle" TargetType="{x:Type xcdg:GroupByControl}">
        <Setter Property="FrameworkElement.MinHeight" Value="25" />
        <Setter Property="Control.Background" Value="{StaticResource defaultBackgroundBrush}" />
        <Setter Property="Control.Foreground" Value="{StaticResource defaultForegroundBrush}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Padding" Value="0,8,8,8" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="xcdg:RowSelector.Visible" Value="False" />
        <Setter Property="ssv:TableView.CanScrollHorizontally" Value="False" />
        <Setter Property="Control.Template" Value="{StaticResource tableflowViewGroupByControlTemplate}" />
    </Style>
    <ControlTemplate x:Key="tableflowViewGroupByItemTemplate" TargetType="{x:Type xcdg:GroupByItem}">
        <Grid>
            <Border Name="mainBorder"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Padding="{TemplateBinding Control.Padding}">
                <StackPanel Orientation="Horizontal">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                      Content="{TemplateBinding ContentControl.Content}"
                                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}" />
                    <ContentPresenter Name="sortGlyphPresenter"
                                      Margin="15,0,0,0"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Content="{x:Null}"
                                      ContentTemplate="{x:Null}"
                                      TextBlock.Foreground="{StaticResource lightBrush}" />
                </StackPanel>
            </Border>
            <Border Name="transparencyLayer" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=SortDirection}" Value="Ascending">
                <Setter TargetName="sortGlyphPresenter" Property="ContentPresenter.ContentTemplate" Value="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).AscendingSortGlyph}" />
                <Setter TargetName="sortGlyphPresenter" Property="FrameworkElement.Margin" Value="6,0,0,0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=SortDirection}" Value="Descending">
                <Setter TargetName="sortGlyphPresenter" Property="ContentPresenter.ContentTemplate" Value="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).DescendingSortGlyph}" />
                <Setter TargetName="sortGlyphPresenter" Property="FrameworkElement.Margin" Value="6,0,0,0" />
            </DataTrigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="transparencyLayer" Property="Border.Background" Value="{StaticResource AccentHoverBrush}" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
                <Setter TargetName="transparencyLayer" Property="Border.Background" Value="{StaticResource AccentPressedBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="tableflowViewMetroGroupByItemStyle" TargetType="{x:Type xcdg:GroupByItem}">
        <Setter Property="Control.Background" Value="{StaticResource MetroAccentColorBrush}" />
        <Setter Property="Control.Foreground" Value="{StaticResource lightBrush}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource HeaderFontSize}" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="Control.Padding" Value="7,0,7,0" />
        <Setter Property="FrameworkElement.Height" Value="30" />
        <Setter Property="Control.Template" Value="{StaticResource tableflowViewGroupByItemTemplate}" />
    </Style>
    <conv:IntAdditionConverter x:Key="groupHeaderControlGroupLevelConverter" />
    <ControlTemplate x:Key="tableflowViewGroupHeaderControlTemplate" TargetType="{x:Type xcdg:GroupHeaderControl}">
        <ssv:PassiveLayoutDecorator Axis="Horizontal">
            <DockPanel>
                <xcdg:HierarchicalGroupLevelIndicatorPane DockPanel.Dock="Left" />
                <xcdg:GroupLevelIndicatorPane DockPanel.Dock="Left"
                                              Indented="False"
                                              xcdg:GroupLevelIndicatorPane.GroupLevel="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                                                                Path=(xcdg:GroupLevelIndicatorPane.GroupLevel),
                                                                                                Converter={StaticResource groupHeaderControlGroupLevelConverter},
                                                                                                ConverterParameter=-1}" />
                <Border Name="mainBorder"
                        Background="{TemplateBinding Control.Background}"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="{TemplateBinding Control.BorderThickness}"
                        FocusVisualStyle="{TemplateBinding FrameworkElement.FocusVisualStyle}"
                        Focusable="True"
                        Padding="{TemplateBinding Control.Padding}">
                    <Border.InputBindings>
                        <KeyBinding Key="Space" Command="{x:Static xcdg:DataGridCommands.ToggleGroupExpansion}" />
                        <KeyBinding Key="Right" Command="{x:Static xcdg:DataGridCommands.ExpandGroup}" />
                        <KeyBinding Key="Add" Command="{x:Static xcdg:DataGridCommands.ExpandGroup}" />
                        <KeyBinding Key="Left" Command="{x:Static xcdg:DataGridCommands.CollapseGroup}" />
                        <KeyBinding Key="Subtract" Command="{x:Static xcdg:DataGridCommands.CollapseGroup}" />
                        <MouseBinding Command="{x:Static xcdg:DataGridCommands.ToggleGroupExpansion}" MouseAction="LeftDoubleClick" />
                    </Border.InputBindings>
                    <DockPanel>
                        <ToggleButton VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                      DockPanel.Dock="Left"
                                      Focusable="False"
                                      IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                          Path=Group.IsExpanded}"
                                      OverridesDefaultStyle="True"
                                      Template="{StaticResource groupExpanderToggleButtonTemplate}" />
                        <ContentPresenter Margin="3,0,0,0"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          Content="{TemplateBinding ContentControl.Content}"
                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"
                                          DockPanel.Dock="Left" />
                    </DockPanel>
                </Border>
            </DockPanel>
        </ssv:PassiveLayoutDecorator>
        <ControlTemplate.Triggers>
            <Trigger Property="xcdg:DataGridControl.NavigationBehavior" Value="None">
                <Setter TargetName="mainBorder" Property="UIElement.Focusable" Value="False" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="tableflowViewGroupHeaderTopLevelStickyControlTemplate" TargetType="{x:Type xcdg:GroupHeaderControl}">
        <ssv:PassiveLayoutDecorator Axis="Horizontal">
            <DockPanel>
                <xcdg:HierarchicalGroupLevelIndicatorPane DockPanel.Dock="Left" />
                <xcdg:GroupLevelIndicatorPane DockPanel.Dock="Left"
                                              Indented="False"
                                              xcdg:GroupLevelIndicatorPane.GroupLevel="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                                                                Path=(xcdg:GroupLevelIndicatorPane.GroupLevel),
                                                                                                Converter={StaticResource groupHeaderControlGroupLevelConverter},
                                                                                                ConverterParameter=-1}" />
                <Grid>
                    <Border Name="mainBorder"
                            Background="{StaticResource MetroContrastingGrayColorBrush}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            FocusVisualStyle="{TemplateBinding FrameworkElement.FocusVisualStyle}"
                            Focusable="True"
                            Padding="{TemplateBinding Control.Padding}">
                        <Border.InputBindings>
                            <KeyBinding Key="Space" Command="{x:Static xcdg:DataGridCommands.ToggleGroupExpansion}" />
                            <KeyBinding Key="Right" Command="{x:Static xcdg:DataGridCommands.ExpandGroup}" />
                            <KeyBinding Key="Add" Command="{x:Static xcdg:DataGridCommands.ExpandGroup}" />
                            <KeyBinding Key="Left" Command="{x:Static xcdg:DataGridCommands.CollapseGroup}" />
                            <KeyBinding Key="Subtract" Command="{x:Static xcdg:DataGridCommands.CollapseGroup}" />
                            <MouseBinding Command="{x:Static xcdg:DataGridCommands.ToggleGroupExpansion}" MouseAction="LeftDoubleClick" />
                        </Border.InputBindings>
                        <DockPanel>
                            <ToggleButton VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          DockPanel.Dock="Left"
                                          Focusable="False"
                                          IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                              Path=Group.IsExpanded}"
                                          OverridesDefaultStyle="True"
                                          Template="{StaticResource groupExpanderToggleButtonTemplate}" />
                            <ContentPresenter Margin="3,0,0,0"
                                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                              Content="{TemplateBinding ContentControl.Content}"
                                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"
                                              DockPanel.Dock="Left" />
                        </DockPanel>
                    </Border>
                </Grid>
            </DockPanel>
        </ssv:PassiveLayoutDecorator>
        <ControlTemplate.Triggers>
            <Trigger Property="xcdg:DataGridControl.NavigationBehavior" Value="None">
                <Setter TargetName="mainBorder" Property="UIElement.Focusable" Value="False" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="tableflowViewMetroGroupHeaderControlStyle" TargetType="{x:Type xcdg:GroupHeaderControl}">
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="Control.Background" Value="{StaticResource defaultBackgroundBrush}" />
        <Setter Property="Control.Foreground" Value="{StaticResource defaultForegroundBrush}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource SubHeaderFontSize}" />
        <Setter Property="ssv:TableView.CanScrollHorizontally" Value="False" />
        <Setter Property="Control.Padding" Value="{StaticResource CellPadding}" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="Control.Template" Value="{StaticResource tableflowViewGroupHeaderControlTemplate}" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Content.IsBottomLevel}" Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Level}" Value="0" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).AreGroupHeadersSticky}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).AreGroupsFlattened}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Control.Template" Value="{StaticResource tableflowViewGroupHeaderTopLevelStickyControlTemplate}" />
                <Setter Property="Control.BorderThickness" Value="0,0,0,1" />
                <Setter Property="Control.BorderBrush" Value="{StaticResource defaultBackgroundBrush}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="tableflowViewMetroGroupLevelIndicatorStyle" TargetType="{x:Type xcdg:GroupLevelIndicator}">
        <Setter Property="Control.Background" Value="{StaticResource defaultBackgroundBrush}" />
        <Setter Property="Control.Foreground" Value="{StaticResource defaultForegroundBrush}" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="FrameworkElement.Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).GroupLevelIndicatorWidth}" />
        <Setter Property="Control.Template" Value="{StaticResource tableflowViewGroupLevelIndicatorTemplate}" />
    </Style>
    <ControlTemplate x:Key="tableflowViewGroupLevelIndicatorPaneTemplate" TargetType="{x:Type xcdg:GroupLevelIndicatorPane}">
        <Grid>
            <Border Name="horizontalBorder"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" />
            <Border Name="verticalBorder"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="0"
                    Padding="{TemplateBinding Control.Padding}">
                <StackPanel Name="PART_GroupLevelIndicatorHost" Orientation="Horizontal" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="xcdg:GroupLevelIndicatorPane.CurrentIndicatorCount" Value="0" />
                    <Condition Property="xcdg:GroupLevelIndicatorPane.IsLeaf" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="verticalBorder" Property="Border.BorderThickness" Value="0" />
            </MultiTrigger>
            <Trigger Property="xcdg:GroupLevelIndicatorPane.ShowVerticalBorder" Value="False">
                <Setter TargetName="verticalBorder" Property="Border.BorderThickness" Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="tableflowViewMetroGroupLevelIndicatorPaneStyle" TargetType="{x:Type xcdg:GroupLevelIndicatorPane}">
        <Setter Property="Control.BorderThickness" Value="0,0,0,1" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource defaultBackgroundBrush}" />
        <Setter Property="Control.Template" Value="{StaticResource tableflowViewGroupLevelIndicatorPaneTemplate}" />
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="xcdg:GroupLevelIndicatorPane.IsLeaf" Value="False" />
                    <Condition Property="ssv:ViewBase.IsLastItem" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="FrameworkElement.Margin" Value="0,0,0,-5" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="tableflowViewGroupNavigationButtonTemplate" TargetType="{x:Type xcdg:GroupNavigationButton}">
        <Grid>
            <Border Name="outerBorder"
                    BorderBrush="{StaticResource defaultForegroundBrush}"
                    BorderThickness="1"
                    CornerRadius="1"
                    Opacity="0" />
            <ContentPresenter Margin="4,2,4,2" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="outerBorder" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="outerBorder" Property="UIElement.Opacity" Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="tableflowViewMetroGroupNavigationButtonStyle" TargetType="{x:Type xcdg:GroupNavigationButton}">
        <Setter Property="Control.Template" Value="{StaticResource tableflowViewGroupNavigationButtonTemplate}" />
    </Style>
    <ControlTemplate x:Key="tableflowViewGroupNavigationControlTemplate" TargetType="{x:Type xcdg:GroupNavigationControl}">
        <Grid>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border Name="buttonBorder"
                        Grid.Column="0"
                        Background="{StaticResource MetroAccentColorBrush}"
                        Opacity="0">
                    <Border Background="{StaticResource AccentHoverBrush}" />
                </Border>
                <Button Name="PART_Button"
                        Grid.Column="0"
                        Command="xcdg:GroupNavigationButton.NavigateToGroup"
                        CommandParameter="{TemplateBinding xcdg:GroupNavigationControl.Group}"
                        Content="{TemplateBinding xcdg:GroupNavigationControl.Group}"
                        ContentTemplate="{TemplateBinding xcdg:GroupNavigationControl.MainItemTemplate}"
                        ContentTemplateSelector="{TemplateBinding xcdg:GroupNavigationControl.MainItemTemplateSelector}"
                        Focusable="False"
                        Foreground="{TemplateBinding Control.Foreground}">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="#00FFFFFF">
                                <ContentPresenter Margin="4,2,4,2" />
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Border Name="arrowBorder"
                        Grid.Column="1"
                        Background="{StaticResource MetroAccentColorBrush}"
                        Opacity="0">
                    <Border Background="{StaticResource AccentHoverBrush}" />
                </Border>
                <ToggleButton Name="PART_ToggleButton"
                              Grid.Column="1"
                              Focusable="False"
                              Foreground="{TemplateBinding Control.Foreground}"
                              IsChecked="{Binding Path=IsDropDownOpen,
                                                  Mode=TwoWay,
                                                  RelativeSource={RelativeSource TemplatedParent}}">
                    <ToggleButton.Template>
                        <ControlTemplate>
                            <Border Name="toggleButtonBackground"
                                    Background="#00FFFFFF"
                                    CornerRadius="0,6,6,0">
                                <Path Name="Arrow"
                                      Margin="7,1,7,1"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="{StaticResource UpArrowGeometry}"
                                      Fill="{TemplateBinding Control.Foreground}"
                                      Opacity="0.3"
                                      RenderOptions.EdgeMode="Aliased"
                                      RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="90" />
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                    <Setter TargetName="Arrow" Property="UIElement.Opacity" Value="1" />
                                </Trigger>
                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                    <Setter TargetName="Arrow" Property="UIElement.Opacity" Value="1" />
                                    <Setter TargetName="Arrow" Property="Shape.Fill" Value="{StaticResource lightBrush}" />
                                    <Setter TargetName="Arrow" Property="Path.Data" Value="{StaticResource DownArrowGeometry}" />
                                    <Setter TargetName="Arrow" Property="UIElement.RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="0" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
            </Grid>
            <Popup Name="PART_Popup"
                   AllowsTransparency="True"
                   Focusable="False"
                   IsOpen="{TemplateBinding xcdg:GroupNavigationControl.IsDropDownOpen}"
                   Placement="Bottom"
                   PopupAnimation="Slide">
                <Grid MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                      MaxHeight="{TemplateBinding xcdg:GroupNavigationControl.MaxDropDownHeight}"
                      SnapsToDevicePixels="True">
                    <Border Background="{StaticResource defaultBackgroundBrush}"
                            BorderBrush="{StaticResource defaultForegroundBrush}"
                            BorderThickness="1"
                            TextElement.Foreground="{StaticResource defaultForegroundBrush}">
                        <ScrollViewer ScrollViewer.CanContentScroll="True"
                                      ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                      ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <VirtualizingStackPanel IsItemsHost="True" />
                        </ScrollViewer>
                    </Border>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=PART_Button, Path=IsMouseOver}" Value="True">
                <Setter TargetName="buttonBorder" Property="UIElement.Opacity" Value="1" />
                <Setter TargetName="PART_Button" Property="Control.Foreground" Value="{StaticResource lightBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=PART_ToggleButton, Path=IsMouseOver}" Value="True">
                <Setter TargetName="arrowBorder" Property="UIElement.Opacity" Value="1" />
                <Setter TargetName="PART_ToggleButton" Property="Control.Foreground" Value="{StaticResource lightBrush}" />
            </DataTrigger>
            <Trigger Property="xcdg:GroupNavigationControl.IsDropDownOpen" Value="True">
                <Setter TargetName="arrowBorder" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="buttonBorder" Property="UIElement.Opacity" Value="0" />
                <Setter TargetName="arrowBorder" Property="UIElement.Opacity" Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="tableflowViewMetroGroupNavigationControlStyle" TargetType="{x:Type xcdg:GroupNavigationControl}">
        <Setter Property="Control.Template" Value="{StaticResource tableflowViewGroupNavigationControlTemplate}" />
    </Style>
    <ControlTemplate x:Key="GroupNavigationControlItemTemplate" TargetType="{x:Type xcdg:GroupNavigationControlItem}">
        <Grid SnapsToDevicePixels="True">
            <Border Name="Border" Background="{TemplateBinding Control.Background}" />
            <Border Margin="2">
                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Border.Background" Value="{StaticResource MetroAccentColorBrush}" />
                <Setter Property="Control.Foreground" Value="{StaticResource lightBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Control.Foreground" Value="{StaticResource disabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="tableflowViewMetroGroupNavigationControlItemStyle" TargetType="{x:Type xcdg:GroupNavigationControlItem}">
        <Setter Property="Control.Background" Value="{StaticResource defaultBackgroundBrush}" />
        <Setter Property="Control.Foreground" Value="{StaticResource defaultForegroundBrush}" />
        <Setter Property="Control.Template" Value="{StaticResource GroupNavigationControlItemTemplate}" />
    </Style>
    <ControlTemplate x:Key="tableflowViewMetroHierarchicalGroupByControlTemplate" TargetType="{x:Type xcdg:HierarchicalGroupByControl}">
        <ControlTemplate.Resources>
            <Style x:Key="{x:Type TreeView}" TargetType="{x:Type TreeView}" />
        </ControlTemplate.Resources>
        <Grid Name="rootGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border Name="rootBorder"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{Binding RelativeSource={RelativeSource Self},
                                          Path=(xcdg:DataGridControl.DataGridContext).HorizontalGridLineBrush}"
                    BorderThickness="{Binding RelativeSource={RelativeSource Self},
                                              Path=(xcdg:DataGridControl.DataGridContext).HorizontalGridLineThickness,
                                              Converter={StaticResource thicknessConverter},
                                              ConverterParameter=Top}"
                    Padding="{TemplateBinding Control.Padding}" />
            <Border Name="verticalGridLineBorder"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    BorderBrush="{Binding RelativeSource={RelativeSource Self},
                                          Path=(xcdg:DataGridControl.DataGridContext).VerticalGridLineBrush}"
                    BorderThickness="{Binding RelativeSource={RelativeSource Self},
                                              Path=(xcdg:DataGridControl.DataGridContext).VerticalGridLineThickness,
                                              Converter={StaticResource thicknessConverter},
                                              ConverterParameter=Right}" />
            <xcdg:HierarchicalGroupLevelIndicatorPane Grid.Column="0" />
            <xcdg:GroupLevelIndicatorPane Name="groupLevelIndicatorPane" Grid.Column="1" />
            <StackPanel Grid.Column="2" Orientation="Horizontal">
                <TreeView Name="PART_HierarchicalGroupByControlTreeView"
                          Background="#00FFFFFF"
                          BorderBrush="#00FFFFFF"
                          Focusable="False"
                          ItemContainerStyle="{StaticResource hierarchicalGroupByControlTreeViewItemStyle}">
                    <TreeViewItem Header="{Binding RelativeSource={RelativeSource Self},
                                                   Path=(xcdg:DataGridControl.DataGridContext)}"
                                  HeaderTemplate="{StaticResource dataGridContextTemplate}"
                                  IsExpanded="True"
                                  ItemContainerStyle="{StaticResource hierarchicalGroupByControlTreeViewItemStyle}"
                                  ItemTemplate="{StaticResource detailConfigurationTemplate}"
                                  ItemsSource="{Binding RelativeSource={RelativeSource Self},
                                                        Path=(xcdg:DataGridControl.DataGridContext).DetailConfigurations}" />
                </TreeView>
                <ContentPresenter Name="noGroupContentPresenter"
                                  Margin="5,0,0,0"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding xcdg:HierarchicalGroupByControl.NoGroupContent}"
                                  Visibility="Collapsed" />
            </StackPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=HasGroups}" Value="True">
                <Setter TargetName="noGroupContentPresenter" Property="UIElement.Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(xcdg:GroupLevelIndicatorPane.GroupLevel)}" Value="-1">
                <Setter TargetName="groupLevelIndicatorPane" Property="UIElement.Visibility" Value="Collapsed" />
                <Setter TargetName="verticalGridLineBorder" Property="Border.BorderThickness" Value="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).VerticalGridLineThickness, Converter={StaticResource thicknessConverter}, ConverterParameter=Right}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="tableflowViewMetroHierarchicalGroupByControlNoDetailsTemplate" TargetType="{x:Type xcdg:HierarchicalGroupByControl}">
        <Grid Name="rootGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border Name="rootBorder"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{Binding RelativeSource={RelativeSource Self},
                                          Path=(xcdg:DataGridControl.DataGridContext).HorizontalGridLineBrush}"
                    BorderThickness="{Binding RelativeSource={RelativeSource Self},
                                              Path=(xcdg:DataGridControl.DataGridContext).HorizontalGridLineThickness,
                                              Converter={StaticResource thicknessConverter},
                                              ConverterParameter=Top}"
                    Padding="{TemplateBinding Control.Padding}" />
            <Border Name="verticalGridLineBorder"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    BorderBrush="{Binding RelativeSource={RelativeSource Self},
                                          Path=(xcdg:DataGridControl.DataGridContext).VerticalGridLineBrush}"
                    BorderThickness="{Binding RelativeSource={RelativeSource Self},
                                              Path=(xcdg:DataGridControl.DataGridContext).VerticalGridLineThickness,
                                              Converter={StaticResource thicknessConverter},
                                              ConverterParameter=Right}" />
            <xcdg:HierarchicalGroupLevelIndicatorPane Grid.Column="0" />
            <xcdg:GroupLevelIndicatorPane Name="groupLevelIndicatorPane" Grid.Column="1" />
            <xcdg:GroupByControl Grid.Column="2"
                                 AllowGroupingModification="{TemplateBinding ctrl:HierarchicalGroupByControl.AllowGroupingModification}"
                                 AllowSort="{TemplateBinding ctrl:HierarchicalGroupByControl.AllowSort}"
                                 Background="{TemplateBinding Control.Background}"
                                 BorderBrush="{TemplateBinding Control.BorderBrush}"
                                 BorderThickness="{TemplateBinding Control.BorderThickness}"
                                 ConnectionLinePen="{TemplateBinding ctrl:HierarchicalGroupByControl.ConnectionLinePen}"
                                 NoGroupContent="{TemplateBinding ctrl:HierarchicalGroupByControl.NoGroupContent}"
                                 StairHeight="{TemplateBinding ctrl:HierarchicalGroupByControl.StairHeight}"
                                 ssv:TableView.CanScrollHorizontally="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(xcdg:GroupLevelIndicatorPane.GroupLevel)}" Value="-1">
                <Setter TargetName="groupLevelIndicatorPane" Property="UIElement.Visibility" Value="Collapsed" />
                <Setter TargetName="verticalGridLineBorder" Property="Border.BorderThickness" Value="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).VerticalGridLineThickness, Converter={StaticResource thicknessConverter}, ConverterParameter=Right}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="tableflowViewMetroHierarchicalGroupByControlStyle" TargetType="{x:Type xcdg:HierarchicalGroupByControl}">
        <Setter Property="FrameworkElement.MinHeight" Value="25" />
        <Setter Property="Control.Background" Value="{StaticResource defaultBackgroundBrush}" />
        <Setter Property="Control.Foreground" Value="{StaticResource defaultForegroundBrush}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Padding" Value="0,8,8,8" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="xcdg:HierarchicalGroupByControl.StairHeight" Value="0" />
        <Setter Property="xcdg:HierarchicalGroupByControl.ConnectionLinePen">
            <Setter.Value>
                <Pen Brush="#00FFFFFF" />
            </Setter.Value>
        </Setter>
        <Setter Property="xcdg:HierarchicalGroupByControl.ConnectionLineOffset" Value="0" />
        <Setter Property="xcdg:HierarchicalGroupByControl.ConnectionLineAlignment" Value="CenterToCenter" />
        <Setter Property="xcdg:RowSelector.Visible" Value="False" />
        <Setter Property="ssv:TableView.CanScrollHorizontally" Value="False" />
        <Setter Property="Control.Template" Value="{StaticResource tableflowViewMetroHierarchicalGroupByControlTemplate}" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).HasDetails}" Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).ParentDataGridContext, Converter={StaticResource nullToBooleanConverter}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Control.Template" Value="{StaticResource tableflowViewMetroHierarchicalGroupByControlNoDetailsTemplate}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="tableflowViewHierarchicalGroupByControlNodeTemplate" TargetType="{x:Type xcdg:HierarchicalGroupByControlNode}">
        <StackPanel Background="{TemplateBinding Control.Background}" Orientation="Horizontal">
            <Border HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    Background="#55FFFFFF"
                    BorderBrush="{StaticResource defaultForegroundBrush}"
                    BorderThickness="1">
                <TextBlock Name="titleTextBlock"
                           Margin="3"
                           Text="{TemplateBinding xcdg:HierarchicalGroupByControlNode.Title}"
                           TextBlock.FontFamily="{StaticResource DefaultFontFamily}"
                           TextBlock.FontSize="{StaticResource DefaultFontSize}" />
            </Border>
            <ItemsPresenter Margin="0,0,0,0" />
        </StackPanel>
    </ControlTemplate>
    <Style x:Key="tableflowViewMetroHierarchicalGroupByControlNodeStyle" TargetType="{x:Type xcdg:HierarchicalGroupByControlNode}">
        <Setter Property="xcdg:HierarchicalGroupByControlNode.StairHeight" Value="0" />
        <Setter Property="xcdg:HierarchicalGroupByControlNode.ConnectionLineOffset" Value="0" />
        <Setter Property="xcdg:HierarchicalGroupByControlNode.ConnectionLineAlignment" Value="CenterToCenter" />
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="FrameworkElement.Margin" Value="4" />
        <Setter Property="Control.Template" Value="{StaticResource tableflowViewHierarchicalGroupByControlNodeTemplate}" />
    </Style>
    <ControlTemplate x:Key="tableflowViewHierarchicalGroupByItemTemplate" TargetType="{x:Type xcdg:HierarchicalGroupByItem}">
        <Grid>
            <Border Name="mainBorder"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Padding="{TemplateBinding Control.Padding}">
                <StackPanel Orientation="Horizontal">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                      Content="{TemplateBinding ContentControl.Content}"
                                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}" />
                    <ContentPresenter Name="sortGlyphPresenter"
                                      Margin="15,0,0,0"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Content="{x:Null}"
                                      ContentTemplate="{x:Null}"
                                      TextBlock.Foreground="{StaticResource lightBrush}" />
                </StackPanel>
            </Border>
            <Border Name="transparencyLayer" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=SortDirection}" Value="Ascending">
                <Setter TargetName="sortGlyphPresenter" Property="ContentPresenter.ContentTemplate" Value="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).AscendingSortGlyph}" />
                <Setter TargetName="sortGlyphPresenter" Property="FrameworkElement.Margin" Value="6,0,0,0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=SortDirection}" Value="Descending">
                <Setter TargetName="sortGlyphPresenter" Property="ContentPresenter.ContentTemplate" Value="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).DescendingSortGlyph}" />
                <Setter TargetName="sortGlyphPresenter" Property="FrameworkElement.Margin" Value="6,0,0,0" />
            </DataTrigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="transparencyLayer" Property="Border.Background" Value="{StaticResource AccentHoverBrush}" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
                <Setter TargetName="transparencyLayer" Property="Border.Background" Value="{StaticResource AccentPressedBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="tableflowViewMetroHierarchicalGroupByItemStyle" TargetType="{x:Type xcdg:HierarchicalGroupByItem}">
        <Setter Property="Control.Background" Value="{StaticResource MetroAccentColorBrush}" />
        <Setter Property="Control.Foreground" Value="{StaticResource lightBrush}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Padding" Value="7" />
        <Setter Property="FrameworkElement.Margin" Value="4,0,4,0" />
        <Setter Property="Control.Template" Value="{StaticResource tableflowViewHierarchicalGroupByItemTemplate}" />
    </Style>
    <Style x:Key="tableflowViewMetroHierarchicalGroupLevelIndicatorPaneStyle" TargetType="{x:Type xcdg:HierarchicalGroupLevelIndicatorPane}">
        <Setter Property="Control.BorderThickness" Value="0,0,0,1" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource defaultBackgroundBrush}" />
        <Setter Property="xcdg:GroupLevelIndicatorPane.ShowIndicators" Value="True" />
        <Setter Property="xcdg:GroupLevelIndicatorPane.ShowVerticalBorder" Value="True" />
        <Setter Property="Control.Template" Value="{StaticResource tableflowViewHierarchicalGroupLevelIndicatorPaneTemplate}" />
        <Style.Triggers>
            <Trigger Property="xcdg:GroupLevelIndicatorPane.GroupLevel" Value="-1">
                <Setter Property="xcdg:GroupLevelIndicatorPane.ShowIndicators" Value="True" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="tableflowViewRowSelectorTemplate" TargetType="{x:Type xcdg:RowSelector}">
        <Grid>
            <Border Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}">
                <Grid>
                    <Border Margin="0,0,0,4"
                            VerticalAlignment="Center"
                            Padding="{TemplateBinding Control.Padding}">
                        <ContentPresenter Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          Content="{TemplateBinding ContentControl.Content}"
                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}" />
                    </Border>
                </Grid>
            </Border>
            <Thumb Name="PART_RowResizerThumb"
                   VerticalAlignment="Bottom"
                   Style="{StaticResource invisibleThumbStyle}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Control.Background" Value="{StaticResource MetroContrastingGrayColorBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <conv:TypeToBooleanConverter x:Key="rowTypeConverter" />
    <Style x:Key="tableflowViewMetroRowSelectorStyle" TargetType="{x:Type xcdg:RowSelector}">
        <Setter Property="Control.Background" Value="#00FFFFFF" />
        <Setter Property="Control.Foreground" Value="{StaticResource defaultForegroundBrush}" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
        <Setter Property="Control.VerticalContentAlignment" Value="Top" />
        <Setter Property="Control.Padding" Value="2" />
        <Setter Property="Control.Template" Value="{StaticResource tableflowViewRowSelectorTemplate}" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsCurrent}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="ContentControl.ContentTemplate" Value="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).CurrentItemGlyph}" />
            </MultiDataTrigger>
            <Trigger Property="xcdg:RowSelector.IsBeingEdited" Value="True">
                <Setter Property="ContentControl.ContentTemplate" Value="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).EditingRowGlyph}" />
            </Trigger>
            <Trigger Property="xcdg:RowSelector.HasValidationError" Value="True">
                <Setter Property="ContentControl.ContentTemplate" Value="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).ValidationErrorGlyph}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="scrollTipTemplate" TargetType="{x:Type xcdg:ScrollTip}">
        <Grid HorizontalAlignment="{TemplateBinding FrameworkElement.HorizontalAlignment}" VerticalAlignment="{TemplateBinding FrameworkElement.VerticalAlignment}">
            <Border Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="1,1,1,1">
                <ContentPresenter Margin="5"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding ContentControl.Content}"
                                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"
                                  TextElement.Foreground="{TemplateBinding TextElement.Foreground}" />
            </Border>
        </Grid>
    </ControlTemplate>
    <Style x:Key="tableflowViewMetroScrollTipStyle" TargetType="{x:Type xcdg:ScrollTip}">
        <Setter Property="Control.Template" Value="{StaticResource scrollTipTemplate}" />
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Right" />
        <Setter Property="Control.Background" Value="{StaticResource defaultBackgroundBrush}" />
        <Setter Property="Control.Foreground" Value="{StaticResource defaultForegroundBrush}" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
    </Style>
    <Geometry x:Key="DownArrowGeometry">M 0,1 C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 z</Geometry>
    <Style BasedOn="{StaticResource tableFlowViewMetroGridControlStyle}" TargetType="{x:Type xcdg:DataGridControl}">
        <Setter Property="Control.BorderBrush" Value="{StaticResource defaultBackgroundBrush}" />
        <Setter Property="xcdg:DataGridControl.NavigationBehavior" Value="RowOnly" />
        <Setter Property="xcdg:DataGridControl.ReadOnly" Value="True" />
        <Setter Property="xcdg:DataGridControl.SelectionMode" Value="Single" />
        <Setter Property="xcdg:DataGridControl.SynchronizeCurrent" Value="True" />
    </Style>
    <ControlTemplate x:Key="metroToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="23" />
            </Grid.ColumnDefinitions>
            <Border Name="backgroundRectangle"
                    Grid.Column="0"
                    Width="Auto"
                    Height="30"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="1,1,0,1" />
            <Border Name="arrowRectangle"
                    Grid.Column="1"
                    Width="Auto"
                    Height="30"
                    Background="{StaticResource grayBackgroundBrush}"
                    BorderBrush="{StaticResource grayForegrounddBrush}"
                    BorderThickness="{StaticResource SmallThickness}" />
            <Path Name="Arrow"
                  Grid.Column="1"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="{StaticResource DownArrowGeometry}"
                  Fill="{StaticResource grayForegrounddBrush}" />
            <Border Name="FadingBorder"
                    Grid.Column="1"
                    Background="#00FFFFFF" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="backgroundRectangle" Property="Border.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
                <Setter TargetName="arrowRectangle" Property="Border.Background" Value="{StaticResource MetroAccentColorBrush}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="FadingBorder" Property="Border.Background" Value="{StaticResource AccentPressedBrush}" />
                <Setter TargetName="arrowRectangle" Property="Border.Background" Value="{StaticResource MetroAccentColorBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="backgroundRectangle" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
                <Setter TargetName="arrowRectangle" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
                <Setter TargetName="Arrow" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroMultiColumnComboBoxTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="UIElement.AllowDrop" Value="True" />
        <Setter Property="FrameworkElement.MinWidth" Value="0" />
        <Setter Property="FrameworkElement.MinHeight" Value="0" />
        <Setter Property="TextBoxBase.CaretBrush" Value="{StaticResource defaultForegroundBrush}" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer Name="PART_ContentHost"
                                  Background="{StaticResource defaultBackgroundBrush}"
                                  Focusable="False"
                                  ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                  ScrollViewer.VerticalScrollBarVisibility="Hidden">
                        <ScrollViewer.Style>
                            <Style TargetType="{x:Type ScrollViewer}">
                                <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
                            </Style>
                        </ScrollViewer.Style>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--
        <ControlTemplate x:Key="metroMultiColumnComboBoxTemplate" TargetType="{x:Type MultiColumnComboBox}">
        <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
        <Grid>
        <ToggleButton Name="ToggleButton" Grid.Column="2" ClickMode="Press" Focusable="False" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" Template="{StaticResource metroToggleButtonTemplate}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
        <Grid Margin="0,0,23,0">
        <Grid Margin="2,0,0,0">
        <ContentPresenter Name="ContentSite" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="{TemplateBinding Control.Padding}" Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}" IsHitTestVisible="False" TextElement.Foreground="{TemplateBinding Control.Foreground}" />
        </Grid>
        <TextBox Name="PART_EditableTextBox" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="{TemplateBinding Control.Padding}" Background="#00FFFFFF" Focusable="True" IsReadOnly="{TemplateBinding ComboBox.IsReadOnly}" Visibility="Hidden" Style="{StaticResource metroMultiColumnComboBoxTextBoxStyle}" />
        </Grid>
        <Popup Name="Popup" AllowsTransparency="True" Focusable="False" IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" Placement="Bottom" PopupAnimation="Slide">
        <Border BorderThickness="{StaticResource SmallThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}">
        <Grid Name="DropDown" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" SnapsToDevicePixels="True">
        <xcdg:DataGridControl Name="PART_dataGrid" AutoCreateColumns="{TemplateBinding MultiColumnComboBox.AutoCreateColumns}" ItemsSource="{TemplateBinding ItemsControl.ItemsSource}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" Style="{TemplateBinding MultiColumnComboBox.DataGridStyle}" />
        </Grid>
        </Border>
        </Popup>
        </Grid>
        </Border>
        <ControlTemplate.Triggers>
        <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter TargetName="ContentSite" Value="{StaticResource DisabledOpacity}" Property="UIElement.Opacity" />
        <Setter TargetName="PART_EditableTextBox" Value="{StaticResource DisabledOpacity}" Property="UIElement.Opacity" />
        </Trigger>
        <Trigger Property="ItemsControl.IsGrouping" Value="True">
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        </Trigger>
        <Trigger SourceName="Popup" Property="Popup.IsOpen" Value="True">
        <Setter Value="{StaticResource MetroAccentColorBrush}" Property="Control.BorderBrush" />
        </Trigger>
        <Trigger Property="ComboBox.IsEditable" Value="True">
        <Setter Property="Control.IsTabStop" Value="False" />
        <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
        </Trigger>
        </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="metroMultiColumnComboBox" TargetType="{x:Type MultiColumnComboBox}">
        <Setter Property="LicenseChecker.Check" Value="True" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Control.Padding" Value="{StaticResource MediumMargin}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource grayForegrounddBrush}" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="Control.Background" Value="{StaticResource defaultBackgroundBrush}" />
        <Setter Property="Control.Foreground" Value="{StaticResource defaultForegroundBrush}" />
        <Setter Property="MultiColumnComboBox.DataGridStyle" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type MultiColumnComboBox}, ResourceId=DefaultDataGridStyle}}" />
        <Setter Property="Control.Template" Value="{StaticResource metroMultiColumnComboBoxTemplate}" />
        </Style>
    -->


</ResourceDictionary>