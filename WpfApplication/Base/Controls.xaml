<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Shared.xaml" />
        <ResourceDictionary Source="Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <ControlTemplate x:Key="metroButtonTemplate" TargetType="{x:Type Button}">
        <Grid Name="Grid">
            <Border Name="outsideBorder"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" />
            <ContentPresenter Name="buttonContent"
                              Margin="{TemplateBinding Control.Padding}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              RecognizesAccessKey="True" />
            <Border Name="FadingBorder" Background="#00FFFFFF" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Control.Background" Value="{StaticResource MetroAccentColorBrush}" />
                <Setter Property="Control.Foreground" Value="{StaticResource lightBrush}" />
            </Trigger>
            <Trigger Property="Button.IsDefault" Value="True">
                <Setter TargetName="outsideBorder" Property="Border.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
                <Setter TargetName="FadingBorder" Property="Border.Background" Value="{StaticResource AccentPressedBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="buttonContent" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
                <Setter TargetName="outsideBorder" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroButton" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="Control.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Background" Value="{StaticResource MetroContrastingGrayColorBrush}" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroGrayColorBrush}" />
        <Setter Property="Control.Padding" Value="{StaticResource ButtonPadding}" />
        <Setter Property="Control.Template" Value="{StaticResource metroButtonTemplate}" />
    </Style>
    <ControlTemplate x:Key="metroHorizontalProgressBarTemplate" TargetType="{x:Type ProgressBar}">
        <Grid Name="TemplateRoot">
            <Border Name="PART_Track"
                    Background="{StaticResource DarkColorBrush}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" />
            <Border Name="PART_Indicator"
                    HorizontalAlignment="Left"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="1" />
            <Border Width="{Binding Path=Width,
                                    ElementName=PART_Indicator}"
                    HorizontalAlignment="Left"
                    Background="{TemplateBinding Control.Foreground}"
                    Opacity="0.5" />
            <Grid Name="isIndeterminateGrid"
                  Grid.Row="0"
                  Grid.RowSpan="2"
                  Margin="2"
                  Opacity="0.7"
                  Visibility="Collapsed">
                <Grid.Background>
                    <LinearGradientBrush MappingMode="RelativeToBoundingBox" StartPoint="-0.2,0.5" EndPoint="1,0.5">
                        <GradientStop x:Name="isIndeterminateStop2" Offset="0.1" Color="#FFFFFEE4" />
                        <GradientStop x:Name="isIndeterminateStop1" Offset="0.2" Color="#00FFFEE4" />
                        <GradientStop x:Name="isIndeterminateStop3" Offset="0" Color="#00FFFEE4" />
                    </LinearGradientBrush>
                </Grid.Background>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ProgressBar.Orientation" Value="Vertical">
                <Setter TargetName="TemplateRoot" Property="FrameworkElement.LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="-90" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ProgressBar.IsIndeterminate" Value="True">
                <Setter TargetName="isIndeterminateGrid" Property="UIElement.Visibility" Value="Visible" />
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard AutoReverse="True" RepeatBehavior="Forever">
                            <DoubleAnimation Duration="00:00:01.5"
                                             From="0"
                                             Storyboard.TargetName="isIndeterminateStop1"
                                             Storyboard.TargetProperty="Offset"
                                             To="1" />
                            <DoubleAnimation Duration="00:00:01.5"
                                             From="0.1"
                                             Storyboard.TargetName="isIndeterminateStop2"
                                             Storyboard.TargetProperty="Offset"
                                             To="1.1" />
                            <DoubleAnimation Duration="00:00:01.5"
                                             From="0.2"
                                             Storyboard.TargetName="isIndeterminateStop3"
                                             Storyboard.TargetProperty="Offset"
                                             To="1.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroProgressBar" TargetType="{x:Type ProgressBar}">
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.Foreground" Value="#00FFFFFF" />
        <Setter Property="Control.Background" Value="{StaticResource MetroAccentColorBrush}" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroGrayColorBrush}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Template" Value="{StaticResource metroHorizontalProgressBarTemplate}" />
    </Style>
    <Style x:Key="metroIncreaseDecreaseRepeatButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="Control.IsTabStop" Value="False" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border Name="Border"
                                Background="{StaticResource DarkColorBrush}"
                                BorderBrush="{StaticResource DarkColorBrush}"
                                BorderThickness="1,1,1,1">
                            <Border Name="border"
                                    Width="Auto"
                                    Height="Auto"
                                    Margin="0,0,0,0"
                                    Background="#FFFFFF00"
                                    BorderBrush="#FFFFFF00"
                                    BorderThickness="1,1,1,1"
                                    Visibility="Collapsed" />
                        </Border>
                        <ContentPresenter Name="ContentPresenter"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding ContentControl.Content}"
                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="metroThumbTemplate" TargetType="{x:Type Thumb}">
        <Grid Name="Grid" Margin="0,0,0,0">
            <Rectangle Name="Rectangle"
                       Width="Auto"
                       Height="Auto"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       Fill="#FF808080"
                       Opacity="1"
                       RadiusX="0"
                       RadiusY="0"
                       Stroke="#FF808080" />
            <Border Name="border"
                    Width="Auto"
                    Margin="1,1,1,1"
                    HorizontalAlignment="Stretch"
                    BorderBrush="#FF808080"
                    BorderThickness="0"
                    Opacity="1" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:00.25"
                                             Storyboard.TargetName="Rectangle"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.6" />
                            <DoubleAnimation Duration="00:00:00.25"
                                             Storyboard.TargetName="border"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.6" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:00.25"
                                             Storyboard.TargetName="Rectangle"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1" />
                            <DoubleAnimation Duration="00:00:00.25"
                                             Storyboard.TargetName="border"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="Rectangle" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroThumb" TargetType="{x:Type Thumb}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Control.IsTabStop" Value="False" />
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="Control.Template" Value="{StaticResource metroThumbTemplate}" />
    </Style>
    <Style x:Key="metroRepeatButtonPageUpDown" TargetType="{x:Type RepeatButton}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Control.Background" Value="#00FFFFFF" />
        <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
        <Setter Property="Control.IsTabStop" Value="False" />
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Rectangle Fill="{StaticResource DarkColorBrush}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="metroScrollBarTemplate" TargetType="{x:Type ScrollBar}">
        <Border BorderBrush="{StaticResource DarkColorBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
            <Grid Name="GridRoot" Background="{TemplateBinding Control.Background}">
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                    <RowDefinition Height="0.00001*" />
                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                </Grid.RowDefinitions>
                <RepeatButton Name="DecreaseRepeat"
                              Command="ScrollBar.LineUpCommand"
                              Style="{StaticResource metroIncreaseDecreaseRepeatButton}">
                    <Grid>
                        <Path Name="DecreaseArrow"
                              Data="M0,3C0,3 0,4 0,4 0,4 3,4 3,4 3,4 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 7,4 7,4 7,4 7,3 7,3 7,3 6,3 6,3 6,3 6,2 6,2 6,2 5,2 5,2 5,2 5,1 5,1 5,1 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3z"
                              Fill="#FF808080"
                              Opacity="1"
                              Stroke="{x:Null}"
                              StrokeThickness="1" />
                    </Grid>
                </RepeatButton>
                <Track Name="PART_Track"
                       Grid.Row="1"
                       IsDirectionReversed="True">
                    <Track.Thumb>
                        <Thumb Style="{StaticResource metroThumb}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Name="PageUp"
                                      Command="ScrollBar.PageDownCommand"
                                      Style="{StaticResource metroRepeatButtonPageUpDown}" />
                    </Track.IncreaseRepeatButton>
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Name="PageDown"
                                      Command="ScrollBar.PageUpCommand"
                                      Style="{StaticResource metroRepeatButtonPageUpDown}" />
                    </Track.DecreaseRepeatButton>
                </Track>
                <RepeatButton Name="IncreaseRepeat"
                              Grid.Row="2"
                              Command="ScrollBar.LineDownCommand"
                              Style="{StaticResource metroIncreaseDecreaseRepeatButton}">
                    <Grid>
                        <Path Name="IncreaseArrow"
                              Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z"
                              Fill="#FF808080"
                              Opacity="1"
                              Stroke="{x:Null}"
                              StrokeThickness="1" />
                    </Grid>
                </RepeatButton>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger SourceName="DecreaseRepeat" Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="DecreaseArrow" Property="UIElement.Opacity" Value="0.6" />
            </Trigger>
            <Trigger SourceName="IncreaseRepeat" Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="IncreaseArrow" Property="UIElement.Opacity" Value="0.6" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
        <Setter Property="Control.Background" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="Control.Foreground" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="FrameworkElement.Width" Value="11" />
        <Setter Property="FrameworkElement.MinWidth" Value="11" />
        <Setter Property="FrameworkElement.Margin" Value="3" />
        <Setter Property="Control.Template" Value="{StaticResource metroScrollBarTemplate}" />
        <Style.Triggers>
            <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
                <Setter Property="FrameworkElement.Width" Value="Auto" />
                <Setter Property="FrameworkElement.MinWidth" Value="0" />
                <Setter Property="FrameworkElement.Height" Value="11" />
                <Setter Property="FrameworkElement.MinHeight" Value="11" />
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Border BorderBrush="{StaticResource DarkColorBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
                                <Grid Name="GridRoot" Background="{TemplateBinding Control.Background}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                        <ColumnDefinition Width="0.00001*" />
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    </Grid.ColumnDefinitions>
                                    <RepeatButton Name="DecreaseRepeat"
                                                  Command="ScrollBar.LineLeftCommand"
                                                  Style="{StaticResource metroIncreaseDecreaseRepeatButton}">
                                        <Grid>
                                            <Grid.LayoutTransform>
                                                <RotateTransform Angle="-90" />
                                            </Grid.LayoutTransform>
                                            <Path Name="DecreaseArrow"
                                                  Data="M0,3C0,3 0,4 0,4 0,4 3,4 3,4 3,4 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 7,4 7,4 7,4 7,3 7,3 7,3 6,3 6,3 6,3 6,2 6,2 6,2 5,2 5,2 5,2 5,1 5,1 5,1 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3z"
                                                  Fill="#FF808080"
                                                  Opacity="1"
                                                  Stroke="{x:Null}"
                                                  StrokeThickness="1" />
                                        </Grid>
                                    </RepeatButton>
                                    <Track Name="PART_Track" Grid.Column="1">
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource metroThumb}" />
                                        </Track.Thumb>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Name="PageRight"
                                                          Command="ScrollBar.PageRightCommand"
                                                          Style="{StaticResource metroRepeatButtonPageUpDown}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Name="PageLeft"
                                                          Command="ScrollBar.PageLeftCommand"
                                                          Style="{StaticResource metroRepeatButtonPageUpDown}" />
                                        </Track.DecreaseRepeatButton>
                                    </Track>
                                    <RepeatButton Name="IncreaseRepeat"
                                                  Grid.Column="2"
                                                  Command="ScrollBar.LineRightCommand"
                                                  Style="{StaticResource metroIncreaseDecreaseRepeatButton}">
                                        <Grid>
                                            <Grid.LayoutTransform>
                                                <RotateTransform Angle="-90" />
                                            </Grid.LayoutTransform>
                                            <Path Name="IncreaseArrow"
                                                  Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z"
                                                  Fill="#FF808080"
                                                  Opacity="1"
                                                  Stroke="{x:Null}"
                                                  StrokeThickness="1" />
                                        </Grid>
                                    </RepeatButton>
                                    <Grid Grid.Column="1"
                                          IsHitTestVisible="False"
                                          Opacity="0.3" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger SourceName="DecreaseRepeat" Property="UIElement.IsMouseOver" Value="True">
                                    <Setter TargetName="DecreaseArrow" Property="UIElement.Opacity" Value="0.6" />
                                </Trigger>
                                <Trigger SourceName="IncreaseRepeat" Property="UIElement.IsMouseOver" Value="True">
                                    <Setter TargetName="IncreaseArrow" Property="UIElement.Opacity" Value="0.6" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="metroScrollViewerTemplate" TargetType="{x:Type ScrollViewer}">
        <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
            <Grid Background="{TemplateBinding Control.Background}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ScrollContentPresenter Grid.Row="0"
                                        Grid.Column="0"
                                        Margin="{TemplateBinding Control.Padding}"
                                        CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                        Content="{TemplateBinding ContentControl.Content}"
                                        ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                        TextElement.Foreground="{TemplateBinding Control.Foreground}" />
                <ScrollBar Name="PART_HorizontalScrollBar"
                           Grid.Row="1"
                           Grid.Column="0"
                           AutomationProperties.AutomationId="HorizontalScrollBar"
                           Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
                           Minimum="0"
                           Orientation="Horizontal"
                           Style="{StaticResource metroScrollBar}"
                           ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                           Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"
                           Value="{Binding Path=HorizontalOffset,
                                           Mode=OneWay,
                                           RelativeSource={RelativeSource TemplatedParent}}" />
                <ScrollBar Name="PART_VerticalScrollBar"
                           Grid.Row="0"
                           Grid.Column="1"
                           AutomationProperties.AutomationId="VerticalScrollBar"
                           Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                           Minimum="0"
                           Orientation="Vertical"
                           Style="{StaticResource metroScrollBar}"
                           ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                           Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"
                           Value="{Binding Path=VerticalOffset,
                                           Mode=OneWay,
                                           RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid>
        </Border>
    </ControlTemplate>
    <Style x:Key="metroScrollViewer" TargetType="{x:Type ScrollViewer}">

        <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
        <Setter Property="Control.VerticalContentAlignment" Value="Top" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Control.Padding" Value="4" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Template" Value="{StaticResource metroScrollViewerTemplate}" />
    </Style>
    <ControlTemplate x:Key="metroListBoxTemplate" TargetType="{x:Type ListBox}">
        <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
            <ScrollViewer Name="ScrollViewer"
                          Background="{StaticResource DarkColorBrush}"
                          Padding="{TemplateBinding Control.Padding}"
                          Style="{StaticResource metroScrollViewer}">
                <ItemsPresenter />
            </ScrollViewer>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Control.Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                <Setter Property="Control.Background" Value="{StaticResource DisabledBackgroundBrush}" />
                <Setter Property="Control.BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                <Setter TargetName="ScrollViewer" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="metroListBoxItemTemplate" TargetType="{x:Type ListBoxItem}">
        <Grid>
            <Border Name="frontBorder"
                    Background="{StaticResource DarkColorBrush}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    Padding="{TemplateBinding Control.Padding}"
                    SnapsToDevicePixels="True">
                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Control.Foreground" Value="{StaticResource lightBrush}" />
                <Setter TargetName="frontBorder" Property="Border.Background" Value="{StaticResource MetroAccentColorBrush}" />
            </Trigger>
            <Trigger Property="ListBoxItem.IsSelected" Value="True">
                <Setter Property="Control.Foreground" Value="{StaticResource lightBrush}" />
                <Setter TargetName="frontBorder" Property="Border.Background" Value="{StaticResource MetroAccentColorBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Control.Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Control.Padding" Value="3" />
        <Setter Property="Control.Template" Value="{StaticResource metroListBoxItemTemplate}" />
        <Style.Triggers />
    </Style>
    <Style x:Key="metroListBox" TargetType="{x:Type ListBox}">

        <Setter Property="Control.Padding" Value="0" />
        <Setter Property="Control.Background" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="Control.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
        <Setter Property="Control.VerticalContentAlignment" Value="Top" />
        <Setter Property="Control.IsTabStop" Value="False" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroGrayColorBrush}" />
        <Setter Property="ItemsControl.ItemContainerStyle" Value="{StaticResource metroListBoxItem}" />
        <Setter Property="Control.Template" Value="{StaticResource metroListBoxTemplate}" />
    </Style>
    <Style x:Key="metroCalendarButton" TargetType="{x:Type CalendarButton}">
        <Setter Property="Control.Background" Value="{StaticResource MetroAccentColorBrush}" />
        <Setter Property="FrameworkElement.MinWidth" Value="40" />
        <Setter Property="FrameworkElement.MinHeight" Value="40" />
        <Setter Property="TextElement.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="TextElement.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" />
                                <VisualState Name="Pressed" />
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualState Name="Unselected" />
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="SelectedBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="ActiveStates">
                                <VisualState Name="Active" />
                                <VisualState Name="Inactive">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.3" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="CalendarButtonFocusStates">
                                <VisualState Name="CalendarButtonFocused" />
                                <VisualState Name="CalendarButtonUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Name="SelectedBackground"
                                   Fill="{TemplateBinding Control.Background}"
                                   Opacity="0" />
                        <ContentPresenter Name="NormalText"
                                          Margin="1,0,1,1"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          TextElement.Foreground="{StaticResource LightColorBrush}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="SelectedBackground" Property="UIElement.Opacity" Value="1">
                            <Setter TargetName="NormalText" Property="TextElement.Foreground" Value="{StaticResource lightBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="metroCalendarDayButton" TargetType="{x:Type CalendarDayButton}">
        <Setter Property="FrameworkElement.MinWidth" Value="30" />
        <Setter Property="FrameworkElement.MinHeight" Value="5" />
        <Setter Property="TextElement.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="TextElement.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                    <Grid Name="DailyGrid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" />
                                <VisualState Name="Pressed" />
                                <VisualState Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualState Name="Unselected" />
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="SelectedBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="CalendarButtonFocused" />
                                <VisualState Name="CalendarButtonUnfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Active" />
                                <VisualState Name="Inactive">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.3" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="DayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="RegularDay" />
                                <VisualState Name="Today">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="TodayBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="BlackoutDayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="NormalDay" />
                                <VisualState Name="BlackoutDay">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="Blackout"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".2" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Name="TodayBackground"
                                   Opacity="0"
                                   RadiusX="0"
                                   RadiusY="0"
                                   Stroke="{StaticResource MetroAccentColorBrush}"
                                   StrokeThickness="1" />
                        <Rectangle Name="SelectedBackground"
                                   Fill="{StaticResource MetroAccentColorBrush}"
                                   Opacity="0" />
                        <Border Background="{TemplateBinding Control.Background}"
                                BorderBrush="{TemplateBinding Control.BorderBrush}"
                                BorderThickness="{TemplateBinding Control.BorderThickness}" />
                        <ContentPresenter Name="NormalText"
                                          Margin="5,1,5,1"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          TextElement.Foreground="{StaticResource LightColorBrush}" />
                        <Path Name="Blackout"
                              Margin="3"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              Data="M8.1772461,11.029181L10.433105,11.029181 11.700684,12.801641 12.973633,11.029181 15.191895,11.029181 12.844727,13.999395 15.21875,17.060919 12.962891,17.060919 11.673828,15.256231 10.352539,17.060919 8.1396484,17.060919 10.519043,14.042364z"
                              Fill="#FF000000"
                              Opacity="0"
                              RenderTransformOrigin="0.5,0.5"
                              Stretch="Fill" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="NormalText" Property="TextElement.Foreground" Value="{StaticResource lightBrush}" />
                            <Setter TargetName="SelectedBackground" Property="UIElement.Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="CalendarDayButton.IsSelected" Value="True">
                            <Setter TargetName="NormalText" Property="TextElement.Foreground" Value="{StaticResource lightBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="metroCalendarItem" TargetType="{x:Type CalendarItem}">
        <Setter Property="FrameworkElement.Margin" Value="0,3,0,3" />
        <Setter Property="TextElement.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="TextElement.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">
                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="CalendarItem.DayTitleTemplateResourceKey">
                            <!--  <x:StaticExtension x:Key="CalendarItem.DayTitleTemplateResourceKey" />  -->
                            <TextBlock Margin="0,6,0,6"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Text="{Binding}"
                                       TextBlock.FontFamily="{TemplateBinding TextElement.FontFamily}"
                                       TextBlock.FontSize="{TemplateBinding TextElement.FontSize}"
                                       TextBlock.FontWeight="Bold"
                                       TextBlock.Foreground="{StaticResource LightColorBrush}" />
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Grid Name="PART_Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="PART_DisabledVisual"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.5" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Control.Background}"
                                BorderBrush="{TemplateBinding Control.BorderBrush}"
                                BorderThickness="{TemplateBinding Control.BorderThickness}">
                            <Border>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.Resources>
                                        <ControlTemplate x:Key="leftArrowButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <Rectangle Name="LeftRec"
                                                           Fill="#00FFFFFF"
                                                           Opacity="1"
                                                           Stretch="Fill" />
                                                <Grid>
                                                    <Path Name="path"
                                                          Margin="0"
                                                          HorizontalAlignment="Center"
                                                          VerticalAlignment="Center"
                                                          Data="M0,3C0,3 0,4 0,4 0,4 3,4 3,4 3,4 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 7,4 7,4 7,4 7,3 7,3 7,3 6,3 6,3 6,3 6,2 6,2 6,2 5,2 5,2 5,2 5,1 5,1 5,1 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3z"
                                                          Fill="{StaticResource lightBrush}"
                                                          RenderTransformOrigin="0.5,0.5">
                                                        <Path.RenderTransform>
                                                            <RotateTransform Angle="-90" />
                                                        </Path.RenderTransform>
                                                    </Path>
                                                </Grid>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                    <Setter TargetName="LeftRec" Property="Shape.Fill" Value="{StaticResource AccentPressedBrush}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                        <ControlTemplate x:Key="rightArrowButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <Rectangle Name="RightRec"
                                                           Fill="#00FFFFFF"
                                                           Opacity="1"
                                                           Stretch="Fill" />
                                                <Grid>
                                                    <Path Name="path"
                                                          Margin="0"
                                                          HorizontalAlignment="Center"
                                                          VerticalAlignment="Center"
                                                          Data="M0,3C0,3 0,4 0,4 0,4 3,4 3,4 3,4 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 7,4 7,4 7,4 7,3 7,3 7,3 6,3 6,3 6,3 6,2 6,2 6,2 5,2 5,2 5,2 5,1 5,1 5,1 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3z"
                                                          Fill="{StaticResource lightBrush}"
                                                          RenderTransformOrigin="0.5,0.5">
                                                        <Path.RenderTransform>
                                                            <RotateTransform Angle="90" />
                                                        </Path.RenderTransform>
                                                    </Path>
                                                </Grid>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                    <Setter TargetName="RightRec" Property="Shape.Fill" Value="{StaticResource AccentPressedBrush}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                        <ControlTemplate x:Key="headerButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <ContentPresenter Name="buttonContent"
                                                                  Width="152"
                                                                  Margin="1,5,1,8"
                                                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                                  Content="{TemplateBinding ContentControl.Content}"
                                                                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                                  TextBlock.TextAlignment="Center"
                                                                  TextElement.Foreground="{StaticResource lightBrush}" />
                                                <Border Name="FrontBorder" Background="#00FFFFFF" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                    <Setter TargetName="FrontBorder" Property="Border.Background" Value="{StaticResource AccentPressedBrush}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Grid.Resources>
                                    <Grid Grid.Row="0"
                                          Grid.ColumnSpan="3"
                                          Margin="0,0,0,12"
                                          HorizontalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Border Name="HeaderBackground"
                                                Grid.Row="0"
                                                Grid.ColumnSpan="3"
                                                Background="{TemplateBinding Control.BorderBrush}" />
                                        <Button Name="PART_PreviousButton"
                                                Grid.Row="0"
                                                Grid.Column="0"
                                                Width="28"
                                                HorizontalAlignment="Left"
                                                Focusable="False"
                                                Template="{StaticResource leftArrowButtonTemplate}" />
                                        <Button Name="PART_HeaderButton"
                                                Grid.Row="0"
                                                Grid.Column="1"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Focusable="False"
                                                Template="{StaticResource headerButtonTemplate}" />
                                        <Button Name="PART_NextButton"
                                                Grid.Row="0"
                                                Grid.Column="2"
                                                Width="28"
                                                HorizontalAlignment="Right"
                                                Focusable="False"
                                                Template="{StaticResource rightArrowButtonTemplate}" />
                                    </Grid>
                                    <Grid Name="PART_MonthView"
                                          Grid.Row="1"
                                          Grid.ColumnSpan="3"
                                          Margin="0,-8,0,7"
                                          HorizontalAlignment="Center"
                                          Visibility="Visible">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                    </Grid>
                                    <Grid Name="PART_YearView"
                                          Grid.Row="1"
                                          Grid.ColumnSpan="3"
                                          Margin="0,2,0,2"
                                          HorizontalAlignment="Center"
                                          Visibility="Hidden">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Border>
                        <Rectangle Name="PART_DisabledVisual"
                                   Fill="{StaticResource DarkColorBrush}"
                                   Opacity="0"
                                   Stretch="Fill"
                                   Stroke="{StaticResource DisabledDefaultBrush}"
                                   StrokeThickness="0"
                                   Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter TargetName="PART_DisabledVisual" Property="UIElement.Visibility" Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=DisplayMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
                            <Setter TargetName="PART_MonthView" Property="UIElement.Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="UIElement.Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=DisplayMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
                            <Setter TargetName="PART_MonthView" Property="UIElement.Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="UIElement.Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="metroCalendar" TargetType="{x:Type Calendar}">

        <Setter Property="Control.Background" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Calendar.CalendarItemStyle" Value="{StaticResource metroCalendarItem}" />
        <Setter Property="Calendar.CalendarDayButtonStyle" Value="{StaticResource metroCalendarDayButton}" />
        <Setter Property="Calendar.CalendarButtonStyle" Value="{StaticResource metroCalendarButton}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <StackPanel Name="PART_Root" HorizontalAlignment="Center">
                        <CalendarItem Name="PART_CalendarItem"
                                      Background="{TemplateBinding Control.Background}"
                                      BorderBrush="{TemplateBinding Control.BorderBrush}"
                                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                                      Style="{TemplateBinding Calendar.CalendarItemStyle}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <x:StaticExtension x:Key="EmptyString" Member="sys:String.Empty" />
    <DataTemplate x:Key="metroComboBoxItemDataTemplate">
        <TextBlock Text="{Binding FallbackValue={StaticResource EmptyString}, TargetNullValue={StaticResource EmptyString}}" />
    </DataTemplate>
    <ControlTemplate x:Key="metroToggleButtonTemplateComboBox" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Rectangle Name="backgroundRectangle"
                       Grid.Column="0"
                       Width="Auto"
                       Height="Auto"
                       Fill="{StaticResource DarkColorBrush}"
                       Stroke="#FFFFFFFF" />
            <Border Name="innerRectangle"
                    Grid.Column="0"
                    Width="Auto"
                    Height="Auto"
                    Background="{StaticResource DarkColorBrush}"
                    BorderBrush="{StaticResource MetroGrayColorBrush}"
                    BorderThickness="1,1,0,1" />
            <Rectangle Name="seperationRectangle"
                       Width="1"
                       Margin="0,4,1,4"
                       HorizontalAlignment="Right"
                       Fill="{StaticResource MetroGrayColorBrush}" />
            <Rectangle Name="backRectangleButton"
                       Grid.Column="1"
                       Width="Auto"
                       Height="Auto"
                       Fill="#00FFFFFF" />
            <Border Name="buttonRectangle"
                    Grid.Column="1"
                    Width="Auto"
                    Height="Auto"
                    BorderBrush="{StaticResource MetroGrayColorBrush}"
                    BorderThickness="0,1,1,1" />
            <Border Grid.Column="0"
                    Background="{TemplateBinding Control.Background}"
                    Opacity="0.3" />
            <Path Name="Arrow"
                  Grid.Column="1"
                  Margin="0,0,1,0"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z"
                  Fill="{StaticResource MetroGrayColorBrush}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="innerRectangle" Property="Border.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
                <Setter TargetName="seperationRectangle" Property="Shape.Fill" Value="{StaticResource MetroAccentColorBrush}" />
                <Setter TargetName="buttonRectangle" Property="Border.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
                <Setter TargetName="Arrow" Property="Shape.Fill" Value="{StaticResource MetroAccentColorBrush}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="innerRectangle" Property="Border.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
                <Setter TargetName="seperationRectangle" Property="Shape.Fill" Value="{StaticResource MetroAccentColorBrush}" />
                <Setter TargetName="buttonRectangle" Property="Border.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
                <Setter TargetName="Arrow" Property="Shape.Fill" Value="{StaticResource MetroAccentColorBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="True">
                <Setter TargetName="innerRectangle" Property="Border.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
                <Setter TargetName="seperationRectangle" Property="Shape.Fill" Value="{StaticResource MetroAccentColorBrush}" />
                <Setter TargetName="buttonRectangle" Property="Border.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
                <Setter TargetName="Arrow" Property="Shape.Fill" Value="{StaticResource MetroAccentColorBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="backgroundRectangle" Property="UIElement.Opacity" Value="0" />
                <Setter TargetName="innerRectangle" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
                <Setter TargetName="buttonRectangle" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
                <Setter TargetName="backRectangleButton" Property="Shape.Fill" Value="{StaticResource DarkColorBrush}" />
                <Setter TargetName="Arrow" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="metroComboBoxItemTemplate" TargetType="{x:Type ComboBoxItem}">
        <Border Name="Bd"
                Background="{TemplateBinding Control.Background}"
                BorderBrush="{TemplateBinding Control.BorderBrush}"
                BorderThickness="{TemplateBinding Control.BorderThickness}"
                Padding="{TemplateBinding Control.Padding}"
                SnapsToDevicePixels="True">
            <ContentPresenter Name="content"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource MetroAccentColorBrush}" />
                <Setter Property="Control.Foreground" Value="{StaticResource lightBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="content" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroComboBoxItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Control.HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.Padding" Value="3,0,3,0" />
        <Setter Property="Control.Background" Value="#00FFFFFF" />
        <Setter Property="Control.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Template" Value="{StaticResource metroComboBoxItemTemplate}" />
    </Style>
    <Style x:Key="metroComboBoxTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="UIElement.AllowDrop" Value="True" />
        <Setter Property="FrameworkElement.MinWidth" Value="0" />
        <Setter Property="FrameworkElement.MinHeight" Value="0" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer Name="PART_ContentHost"
                                  Background="{StaticResource DarkColorBrush}"
                                  Focusable="False"
                                  ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                  ScrollViewer.VerticalScrollBarVisibility="Hidden">
                        <ScrollViewer.Style>
                            <Style TargetType="{x:Type ScrollViewer}">
                                <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
                            </Style>
                        </ScrollViewer.Style>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollViewermetro" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Control.Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Row="0"
                                                Grid.Column="0"
                                                Margin="{TemplateBinding Control.Padding}"
                                                CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                                Content="{TemplateBinding ContentControl.Content}"
                                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" />
                        <ScrollBar Name="PART_HorizontalScrollBar"
                                   Grid.Row="1"
                                   Grid.Column="0"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
                                   Minimum="0"
                                   Orientation="Horizontal"
                                   Style="{StaticResource metroScrollBar}"
                                   ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                                   Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding Path=HorizontalOffset,
                                                   Mode=OneWay,
                                                   RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar Name="PART_VerticalScrollBar"
                                   Grid.Row="0"
                                   Grid.Column="1"
                                   AutomationProperties.AutomationId="VerticalScrollBar"
                                   Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                                   Minimum="0"
                                   Orientation="Vertical"
                                   Style="{StaticResource metroScrollBar}"
                                   ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                                   Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding Path=VerticalOffset,
                                                   Mode=OneWay,
                                                   RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="metroComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <ControlTemplate.Resources>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Control.BorderThickness" Value="0" />
                <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
            </Style>
        </ControlTemplate.Resources>
        <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
            <Grid>
                <ToggleButton Name="ToggleButton"
                              Grid.Column="2"
                              Background="{TemplateBinding Control.Background}"
                              BorderBrush="{TemplateBinding Control.BorderBrush}"
                              ClickMode="Press"
                              Focusable="False"
                              IsChecked="{Binding Path=IsDropDownOpen,
                                                  Mode=TwoWay,
                                                  RelativeSource={RelativeSource TemplatedParent}}"
                              Template="{StaticResource metroToggleButtonTemplateComboBox}" />
                <Grid Margin="0,0,23,0">
                    <Grid Margin="2,0,0,0">
                        <ContentPresenter Name="ContentSite"
                                          Margin="{TemplateBinding Control.Padding}"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                                          IsHitTestVisible="False"
                                          TextElement.Foreground="{TemplateBinding Control.Foreground}" />
                    </Grid>
                    <TextBox Name="PART_EditableTextBox"
                             Margin="{TemplateBinding Control.Padding}"
                             HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                             VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                             Background="#00FFFFFF"
                             Focusable="True"
                             IsReadOnly="{TemplateBinding ComboBox.IsReadOnly}"
                             Style="{StaticResource metroComboBoxTextBoxStyle}"
                             Visibility="Hidden" />
                </Grid>
                <Popup Name="Popup"
                       AllowsTransparency="True"
                       Focusable="False"
                       IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                       Placement="Bottom"
                       PopupAnimation="Slide">
                    <Grid Name="DropDown"
                          MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                          MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                          SnapsToDevicePixels="True">
                        <Border Name="DropDownBorder"
                                Background="{StaticResource DarkColorBrush}"
                                BorderBrush="{TemplateBinding Control.BorderBrush}"
                                BorderThickness="1,1,1,1" />
                        <ScrollViewer Margin="0"
                                      ScrollViewer.CanContentScroll="True"
                                      ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                                      SnapsToDevicePixels="True"
                                      Style="{StaticResource ScrollViewermetro}">
                            <ItemsPresenter KeyboardNavigation.TabNavigation="Contained" />
                        </ScrollViewer>
                    </Grid>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ItemsControl.HasItems" Value="False">
                <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="ContentSite" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
                <Setter TargetName="PART_EditableTextBox" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="DropDownBorder" Property="Border.CornerRadius" Value="0" />
                <Setter TargetName="DropDownBorder" Property="Border.BorderThickness" Value="1,1,1,1" />
            </Trigger>
            <Trigger Property="ComboBox.IsEditable" Value="True">
                <Setter Property="Control.IsTabStop" Value="False" />
                <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible" />
                <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroComboBox" TargetType="{x:Type ComboBox}">

        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Control.Padding" Value="3" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
        <Setter Property="Control.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.Template" Value="{StaticResource metroComboBoxTemplate}" />
    </Style>
    <ControlTemplate x:Key="metroRepeatButtonTemplate" TargetType="{x:Type RepeatButton}">
        <Grid Name="Grid">
            <Border Name="outsideBorder"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" />
            <ContentPresenter Name="buttonContent"
                              Margin="{TemplateBinding Control.Padding}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              RecognizesAccessKey="True" />
            <Border Name="FadingBorder" Background="#00FFFFFF" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Control.Background" Value="{StaticResource MetroAccentColorBrush}" />
                <Setter Property="Control.Foreground" Value="{StaticResource lightBrush}" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
                <Setter TargetName="FadingBorder" Property="Border.Background" Value="{StaticResource AccentPressedBrush}" />
                <Setter Property="Control.Foreground" Value="{StaticResource lightBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="buttonContent" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
                <Setter TargetName="outsideBorder" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroRepeatButton" TargetType="{x:Type RepeatButton}">

        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="Control.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Background" Value="{StaticResource MetroContrastingGrayColorBrush}" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroGrayColorBrush}" />
        <Setter Property="Control.Padding" Value="{StaticResource ButtonPadding}" />
        <Setter Property="Control.Template" Value="{StaticResource metroRepeatButtonTemplate}" />
    </Style>
    <ControlTemplate x:Key="metroRichTextBoxTemplate" TargetType="{x:Type TextBoxBase}">
        <Grid>
            <Border Name="Border"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Padding="{StaticResource TextBoxMargin}">
                <ScrollViewer Name="PART_ContentHost"
                              Style="{x:Null}"
                              TextElement.FontFamily="{TemplateBinding TextElement.FontFamily}"
                              TextElement.FontSize="{TemplateBinding TextElement.FontSize}" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="Border" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Control.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="True">
                <Setter Property="Control.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroRichTextBox" TargetType="{x:Type RichTextBox}">

        <Setter Property="TextBoxBase.CaretBrush" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroGrayColorBrush}" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.Background" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UIElement.AllowDrop" Value="True" />
        <Setter Property="Control.Template" Value="{StaticResource metroRichTextBoxTemplate}" />
    </Style>
    <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Control.IsTabStop" Value="False" />
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="#00FFFFFF" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="FrameworkElement.Height" Value="20" />
        <Setter Property="FrameworkElement.Width" Value="10" />
        <Setter Property="Control.Background" Value="{StaticResource MetroAccentColorBrush}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Border Name="outsideBorder"
                                Background="{TemplateBinding Control.Background}"
                                BorderThickness="0"
                                Padding="{TemplateBinding Control.Padding}" />
                        <Border Name="FadingBorder" Background="#00FFFFFF" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="FadingBorder" Property="Border.Background" Value="{StaticResource AccentHoverBrush}" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter TargetName="outsideBorder" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
        <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding FrameworkElement.MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Border Grid.Row="0"
                        Grid.RowSpan="3"
                        Background="{TemplateBinding Control.Background}" />
                <TickBar Name="TopTick"
                         Height="4"
                         Fill="{TemplateBinding Control.Foreground}"
                         Placement="Top"
                         SnapsToDevicePixels="True"
                         Visibility="Collapsed" />
                <Border Name="TrackBackground"
                        Grid.Row="1"
                        Height="4"
                        Margin="0"
                        Background="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="0"
                        CornerRadius="2" />
                <Track Name="PART_Track" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="Slider.DecreaseLarge" Style="{StaticResource SliderButtonStyle}" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="Slider.IncreaseLarge" Style="{StaticResource SliderButtonStyle}" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar Name="BottomTick"
                         Grid.Row="2"
                         Height="4"
                         Fill="{TemplateBinding Control.Foreground}"
                         Placement="Bottom"
                         SnapsToDevicePixels="True"
                         Visibility="Collapsed" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Slider.TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="Slider.TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="Slider.TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="TrackBackground" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="VerticalSlider" TargetType="{x:Type Slider}">
        <Border Background="{TemplateBinding Control.Background}"
                BorderBrush="{TemplateBinding Control.BorderBrush}"
                BorderThickness="{TemplateBinding Control.BorderThickness}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding FrameworkElement.MinWidth}" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TickBar Name="TopTick"
                         Width="4"
                         Fill="{TemplateBinding Control.Foreground}"
                         Placement="Left"
                         SnapsToDevicePixels="True"
                         Visibility="Collapsed" />
                <Border Name="TrackBackground"
                        Grid.Column="1"
                        Width="4"
                        Margin="0"
                        Background="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="0"
                        CornerRadius="2" />
                <Track Name="PART_Track" Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="Slider.DecreaseLarge" Style="{StaticResource SliderButtonStyle}" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="Slider.IncreaseLarge" Style="{StaticResource SliderButtonStyle}" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar Name="BottomTick"
                         Grid.Column="2"
                         Width="4"
                         Fill="{TemplateBinding Control.Foreground}"
                         Placement="Right"
                         SnapsToDevicePixels="True"
                         Visibility="Collapsed" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Slider.TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="Slider.TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="Slider.TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroSlider" TargetType="{x:Type Slider}">

        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroGrayColorBrush}" />
        <Setter Property="Control.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Style.Triggers>
            <Trigger Property="Slider.Orientation" Value="Horizontal">
                <Setter Property="Control.Template" Value="{StaticResource HorizontalSlider}" />
            </Trigger>
            <Trigger Property="Slider.Orientation" Value="Vertical">
                <Setter Property="Control.Template" Value="{StaticResource VerticalSlider}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="metroTextBoxTemplate" TargetType="{x:Type TextBoxBase}">
        <Border Name="Border"
                Background="{TemplateBinding Control.Background}"
                BorderBrush="{TemplateBinding Control.BorderBrush}"
                BorderThickness="{TemplateBinding Control.BorderThickness}"
                Padding="2">
            <ScrollViewer Name="PART_ContentHost" Style="{StaticResource metroScrollViewer}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="Border" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Control.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="True">
                <Setter Property="Control.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroTextBox" TargetType="{x:Type TextBox}">

        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroGrayColorBrush}" />
        <Setter Property="Control.Background" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UIElement.AllowDrop" Value="True" />
        <Setter Property="Control.Template" Value="{StaticResource metroTextBoxTemplate}" />
    </Style>
    <ControlTemplate x:Key="metroToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Grid Name="Grid">
            <Border Name="outsideBorder"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" />
            <ContentPresenter Name="buttonContent"
                              Margin="{TemplateBinding Control.Padding}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              RecognizesAccessKey="True" />
            <Border Name="FadingBorder" Background="#00FFFFFF" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Control.Background" Value="{StaticResource MetroAccentColorBrush}" />
                <Setter Property="Control.Foreground" Value="{StaticResource lightBrush}" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
                <Setter TargetName="FadingBorder" Property="Border.Background" Value="{StaticResource AccentPressedBrush}" />
                <Setter Property="Control.Foreground" Value="{StaticResource lightBrush}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Control.Background" Value="{StaticResource MetroAccentColorBrush}" />
                <Setter Property="Control.Foreground" Value="{StaticResource lightBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="buttonContent" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
                <Setter TargetName="outsideBorder" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroToggleButton" TargetType="{x:Type ToggleButton}">

        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Background" Value="{StaticResource MetroContrastingGrayColorBrush}" />
        <Setter Property="Control.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroGrayColorBrush}" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.Padding" Value="{StaticResource ButtonPadding}" />
        <Setter Property="Control.Template" Value="{StaticResource metroToggleButtonTemplate}" />
    </Style>
    <ControlTemplate x:Key="metroCheckBoxTemplate" TargetType="{x:Type CheckBox}">
        <BulletDecorator Background="#00FFFFFF">
            <BulletDecorator.Bullet>
                <Grid Width="15" Height="15">
                    <Border Name="BackBorder"
                            Background="#FFFFFFFF"
                            Visibility="Collapsed" />
                    <Border Name="OutsideBorder"
                            Background="{StaticResource MetroContrastingGrayColorBrush}"
                            BorderBrush="{StaticResource MetroGrayColorBrush}"
                            BorderThickness="1,1,1,1" />
                    <Border Name="nullCheck"
                            Margin="4"
                            Background="{StaticResource lightBrush}"
                            CornerRadius="1"
                            Visibility="Collapsed" />
                    <Path Name="CheckMark"
                          Width="Auto"
                          Margin="3,2,2.125,2.375"
                          HorizontalAlignment="Stretch"
                          Data="M619,736C619,736 617,738 617,738 617,738 621,742 621,742 621,742 629,732 629,732 629,732 627,730 627,730 627,730 621,738 621,738 621,738 619,736 619,736z"
                          Fill="{StaticResource MetroAccentColorBrush}"
                          Stretch="Fill"
                          Stroke="{StaticResource MetroAccentColorBrush}"
                          StrokeDashCap="Round"
                          StrokeEndLineCap="Round"
                          StrokeLineJoin="Round"
                          StrokeStartLineCap="Round"
                          StrokeThickness="0" />
                </Grid>
            </BulletDecorator.Bullet>
            <ContentPresenter Name="content"
                              Margin="4,0,0,0"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              RecognizesAccessKey="True"
                              TextBlock.Foreground="{TemplateBinding Control.Foreground}" />
        </BulletDecorator>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="{x:Null}">
                <Setter TargetName="nullCheck" Property="UIElement.Visibility" Value="Visible" />
                <Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="false">
                <Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="BackBorder" Property="Border.Background" Value="{StaticResource DarkColorBrush}" />
                <Setter TargetName="OutsideBorder" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
                <Setter TargetName="CheckMark" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
                <Setter TargetName="content" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroCheckBox" TargetType="{x:Type CheckBox}">

        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="Control.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Template" Value="{StaticResource metroCheckBoxTemplate}" />
    </Style>
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />
    <Style x:Key="MenuItemScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="#00FFFFFF">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="15" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="15" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.RowSpan="3" />
                        <RepeatButton Name="topRepeatButton"
                                      Grid.Row="0"
                                      Height="0"
                                      ClickMode="Hover"
                                      Command="ScrollBar.LineUpCommand">
                            <Grid Width="5"
                                  Height="10"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center">
                                <Canvas Width="9" Height="5">
                                    <Path Data="M4.53125,0.15625C4.53125,0.15625 9,5 9,5 9,5 0,5 0,5 0,5 4.53125,0.15625 4.53125,0.15625z" Opacity="1" />
                                </Canvas>
                            </Grid>
                            <RepeatButton.Visibility>
                                <MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="0"
                                              FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                        </RepeatButton>
                        <RepeatButton Name="bottomRepeatButton"
                                      Grid.Row="2"
                                      Height="15"
                                      ClickMode="Hover"
                                      Command="ScrollBar.LineDownCommand">
                            <RepeatButton.Visibility>
                                <MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="100"
                                              FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Grid Width="5"
                                  Height="10"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  RenderTransformOrigin="0.5,0.5">
                                <Canvas Width="9" Height="5">
                                    <Path Data="M4.53125,0.15625C4.53125,0.15625 9,5 9,5 9,5 0,5 0,5 0,5 4.53125,0.15625 4.53125,0.15625z" Opacity="1" />
                                </Canvas>
                                <Grid.RenderTransform>
                                    <RotateTransform Angle="180" />
                                </Grid.RenderTransform>
                            </Grid>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="metroContextMenuTemplate" TargetType="{x:Type ContextMenu}">
        <Grid>
            <Border Name="Border"
                    Background="{StaticResource DarkColorBrush}"
                    BorderBrush="{StaticResource MetroAccentColorBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}">
                <ScrollViewer Style="{StaticResource MenuItemScrollViewer}">
                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                </ScrollViewer>
            </Border>
        </Grid>
    </ControlTemplate>
    <Style x:Key="metroContextMenu" TargetType="{x:Type ContextMenu}">

        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.Template" Value="{StaticResource metroContextMenuTemplate}" />
    </Style>
    <ControlTemplate x:Key="metroPasswordBoxTemplate" TargetType="{x:Type PasswordBox}">
        <Border Name="Border"
                Background="{TemplateBinding Control.Background}"
                BorderBrush="{TemplateBinding Control.BorderBrush}"
                BorderThickness="{TemplateBinding Control.BorderThickness}"
                Padding="2">
            <ScrollViewer Name="PART_ContentHost"
                          Margin="0"
                          Style="{x:Null}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="Border" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Control.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="True">
                <Setter Property="Control.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroPasswordBox" TargetType="{x:Type PasswordBox}">

        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroGrayColorBrush}" />
        <Setter Property="Control.Background" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UIElement.AllowDrop" Value="True" />
        <Setter Property="Control.Template" Value="{StaticResource metroPasswordBoxTemplate}" />
    </Style>
    <ControlTemplate x:Key="metroGroupBoxTemplate" TargetType="{x:Type GroupBox}">
        <Grid SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="6" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="6" />
            </Grid.RowDefinitions>
            <Border Grid.Row="1"
                    Grid.RowSpan="3"
                    Grid.Column="0"
                    Grid.ColumnSpan="4"
                    Background="{StaticResource DarkColorBrush}"
                    BorderBrush="#00FFFFFF"
                    BorderThickness="1" />
            <Border Grid.Row="1"
                    Grid.RowSpan="3"
                    Grid.Column="0"
                    Grid.ColumnSpan="4"
                    Background="{TemplateBinding Control.Background}"
                    Opacity="0.3" />
            <Border Name="Header"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="1"
                    Padding="3,0,3,0">
                <ContentPresenter ContentSource="Header"
                                  RecognizesAccessKey="True"
                                  TextElement.Foreground="{StaticResource LightColorBrush}" />
            </Border>
            <ContentPresenter Grid.Row="2"
                              Grid.Column="1"
                              Grid.ColumnSpan="2"
                              Margin="2" />
            <Border Grid.Row="1"
                    Grid.RowSpan="3"
                    Grid.ColumnSpan="4"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}">
                <Border.OpacityMask>
                    <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                        <Binding ElementName="Header" Path="ActualWidth" />
                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                    </MultiBinding>
                </Border.OpacityMask>
            </Border>
            <Border Grid.Row="1"
                    Grid.RowSpan="3"
                    Grid.ColumnSpan="4"
                    Margin="1,1,1,1"
                    BorderThickness="1">
                <Border.OpacityMask>
                    <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                        <Binding ElementName="Header" Path="ActualWidth" />
                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                    </MultiBinding>
                </Border.OpacityMask>
            </Border>
        </Grid>
    </ControlTemplate>
    <Style x:Key="metroGroupBox" TargetType="{x:Type GroupBox}">

        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.Background" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroGrayColorBrush}" />
        <Setter Property="Control.Template" Value="{StaticResource metroGroupBoxTemplate}" />
    </Style>
    <ControlTemplate x:Key="metroTabControlTemplate" TargetType="{x:Type TabControl}">
        <Grid KeyboardNavigation.TabNavigation="Local">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TabPanel Name="HeaderPanel"
                      Grid.Row="0"
                      Background="{StaticResource DarkColorBrush}"
                      IsItemsHost="True"
                      KeyboardNavigation.TabIndex="1"
                      ZIndex="1" />
            <Grid Grid.Row="1" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.2*" />
                    <RowDefinition Height="0.8*" />
                </Grid.RowDefinitions>
                <Border Name="tabControlMainBorder"
                        Grid.Row="0"
                        Grid.RowSpan="3"
                        Background="{StaticResource DarkColorBrush}"
                        BorderBrush="{StaticResource MetroAccentColorBrush}"
                        BorderThickness="1" />
                <Border Grid.Row="0"
                        Grid.RowSpan="1"
                        Background="{StaticResource DarkColorBrush}"
                        BorderThickness="1" />
            </Grid>
            <Border Grid.Row="1"
                    Grid.Column="1"
                    Background="{TemplateBinding Control.Background}"
                    Opacity="0.3" />
            <Border Name="Border"
                    Grid.Row="1"
                    Grid.Column="1"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    KeyboardNavigation.DirectionalNavigation="Contained"
                    KeyboardNavigation.TabIndex="2"
                    KeyboardNavigation.TabNavigation="Local">
                <ContentPresenter Name="PART_SelectedContentHost"
                                  Margin="4"
                                  ContentSource="SelectedContent"
                                  TextElement.Foreground="{TemplateBinding Control.Foreground}" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="2" />
                <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                <Setter TargetName="HeaderPanel" Property="Grid.ColumnSpan" Value="3" />
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement" Value="Top">
                <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                <Setter TargetName="HeaderPanel" Property="Grid.ColumnSpan" Value="3" />
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                <Setter TargetName="HeaderPanel" Property="Grid.RowSpan" Value="3" />
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="2" />
                <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                <Setter TargetName="HeaderPanel" Property="Grid.RowSpan" Value="3" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="metroTabItemTemplate" TargetType="{x:Type TabItem}">
        <Grid Name="tabItemMainGrid" Margin="0,0,3,0">
            <Grid Name="visualRootGrid" RenderTransformOrigin="0.5,0.5">
                <Border Name="BackBorder"
                        Background="#FFFFFFFF"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="{TemplateBinding Control.BorderThickness}"
                        IsHitTestVisible="False" />
                <Border Name="contentSiteBorder"
                        Background="{StaticResource DarkColorBrush}"
                        ClipToBounds="{TemplateBinding TabItem.IsSelected}" />
            </Grid>
            <ContentPresenter Name="ContentSite"
                              Margin="{TemplateBinding Control.Padding}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              ContentSource="Header"
                              RecognizesAccessKey="True"
                              TextElement.FontFamily="{StaticResource DefaultFontFamily}"
                              TextElement.Foreground="{StaticResource LightColorBrush}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="tabItemMainGrid" Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="BackBorder" Property="Border.Background" Value="{StaticResource LightColorBrush}" />
                <Setter TargetName="contentSiteBorder" Property="UIElement.Opacity" Value="{StaticResource MouseOverOpacity}" />
            </Trigger>
            <Trigger Property="TabItem.IsSelected" Value="True">
                <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="{StaticResource lightBrush}" />
                <Setter TargetName="BackBorder" Property="Border.Background" Value="#FFFFFFFF" />
                <Setter TargetName="contentSiteBorder" Property="Border.Background" Value="{StaticResource MetroAccentColorBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="visualRootGrid" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
                <Setter TargetName="ContentSite" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroTabItem" TargetType="{x:Type TabItem}">

        <Setter Property="TextElement.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.Padding" Value="11,6,11,6" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Background" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
        <Setter Property="Control.Template" Value="{StaticResource metroTabItemTemplate}" />
    </Style>
    <Style x:Key="metroTabControl" TargetType="{x:Type TabControl}">

        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroGrayColorBrush}" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="ItemsControl.ItemContainerStyle" Value="{StaticResource metroTabItem}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Template" Value="{StaticResource metroTabControlTemplate}" />
    </Style>
    <Style x:Key="metroLabel" TargetType="{x:Type Label}">

        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.Background" Value="{StaticResource DarkColorBrush}" />
        <Style.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Control.Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="metroRadioButtonTemplate" TargetType="{x:Type RadioButton}">
        <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
            <BulletDecorator Background="{StaticResource DarkColorBrush}">
                <BulletDecorator.Bullet>
                    <Grid Width="15" Height="15">
                        <Ellipse Name="EllipseOutside"
                                 Stroke="{StaticResource MetroGrayColorBrush}"
                                 StrokeThickness="1" />
                        <Ellipse Name="CheckMark"
                                 Margin="4"
                                 Fill="{StaticResource MetroAccentColorBrush}" />
                    </Grid>
                </BulletDecorator.Bullet>
                <ContentPresenter Margin="{TemplateBinding Control.Padding}"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                  RecognizesAccessKey="True"
                                  TextElement.Foreground="{TemplateBinding Control.Foreground}" />
            </BulletDecorator>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="false">
                <Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True" />
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="EllipseOutside" Property="UIElement.Opacity" Value="{StaticResource MouseOverOpacity}" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
                <Setter TargetName="EllipseOutside" Property="UIElement.Opacity" Value="{StaticResource PressedOpacity}" />
                <Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Control.Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                <Setter TargetName="EllipseOutside" Property="Shape.Fill" Value="{StaticResource DisabledBorderBrush}" />
                <Setter TargetName="EllipseOutside" Property="Shape.Stroke" Value="{StaticResource DisabledBorderBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroRadioButton" TargetType="{x:Type RadioButton}">

        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="Control.Padding" Value="4,0,0,0" />
        <Setter Property="Control.Template" Value="{StaticResource metroRadioButtonTemplate}" />
    </Style>
    <ControlTemplate x:Key="mertoToolTipTemplate" TargetType="{x:Type ToolTip}">
        <Grid HorizontalAlignment="{TemplateBinding FrameworkElement.HorizontalAlignment}" VerticalAlignment="{TemplateBinding FrameworkElement.VerticalAlignment}">
            <Border Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="1,1,1,1" />
            <Border Margin="1,1,1,1"
                    BorderBrush="{StaticResource MetroAccentColorBrush}"
                    BorderThickness="0">
                <ContentPresenter Margin="5"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding ContentControl.Content}"
                                  TextElement.Foreground="{TemplateBinding TextElement.Foreground}" />
            </Border>
        </Grid>
    </ControlTemplate>
    <Style x:Key="mertoToolTip" TargetType="{x:Type ToolTip}">

        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Background" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
        <Setter Property="TextElement.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.Template" Value="{StaticResource mertoToolTipTemplate}" />
    </Style>
    <ControlTemplate x:Key="metroStatusBarTemplate" TargetType="{x:Type StatusBar}">
        <Border Background="{StaticResource DarkColorBrush}"
                BorderBrush="{TemplateBinding Control.BorderBrush}"
                BorderThickness="{TemplateBinding Control.BorderThickness}"
                Padding="1">
            <Grid>
                <Border Background="{StaticResource DarkColorBrush}" />
                <Border Background="{TemplateBinding Control.Background}"
                        Opacity="0.3"
                        Padding="{TemplateBinding Control.Padding}" />
                <ItemsPresenter />
            </Grid>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="metroStatusBarSeparatorTemplate" TargetType="{x:Type Separator}">
        <StackPanel Margin="3,5,3,5" Orientation="Horizontal">
            <Rectangle Width="1" Fill="{StaticResource LightColorBrush}" />
        </StackPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="metroStatusBarItemTemplate" TargetType="{x:Type StatusBarItem}">
        <Border Background="{TemplateBinding Control.Background}"
                BorderBrush="{TemplateBinding Control.BorderBrush}"
                BorderThickness="{TemplateBinding Control.BorderThickness}"
                Padding="{TemplateBinding Control.Padding}">
            <ContentPresenter />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Control.Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroStatusBarSeparator" TargetType="{x:Type Separator}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="Control.Template" Value="{StaticResource metroStatusBarSeparatorTemplate}" />
    </Style>
    <Style x:Key="{x:Type StatusBarItem}" TargetType="{x:Type StatusBarItem}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Control.Background" Value="#00FFFFFF" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
        <Setter Property="Control.Padding" Value="3" />
        <Setter Property="Control.Template" Value="{StaticResource metroStatusBarItemTemplate}" />
    </Style>
    <Style x:Key="metroStatusBar" TargetType="{x:Type StatusBar}">
        <Style.Resources>
            <Style BasedOn="{StaticResource metroStatusBarSeparator}" TargetType="{x:Type Separator}" />
            <Style BasedOn="{StaticResource metroCheckBox}" TargetType="{x:Type CheckBox}" />
            <Style BasedOn="{StaticResource metroRadioButton}" TargetType="{x:Type RadioButton}" />
            <Style BasedOn="{StaticResource metroLabel}" TargetType="{x:Type Label}" />
        </Style.Resources>

        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="TextElement.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.Background" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Template" Value="{StaticResource metroStatusBarTemplate}" />
        <Style.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="metroWindow" TargetType="{x:Type Window}">

        <Setter Property="Control.Background" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="Control.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
    </Style>
    <ControlTemplate x:Key="metroDatePickerTextBoxTemplate" TargetType="{x:Type DatePickerTextBox}">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal" />
                    <VisualState Name="MouseOver" />
                </VisualStateGroup>
                <VisualStateGroup Name="WatermarkStates">
                    <VisualState Name="Unwatermarked" />
                    <VisualState Name="Watermarked">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="ContentElement"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0" />
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="PART_Watermark"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="FocusStates">
                    <VisualState Name="Unfocused" />
                    <VisualState Name="Focused">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="FocusVisual"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Name="Border"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Opacity="1"
                    Padding="{TemplateBinding Control.Padding}">
                <Grid Name="WatermarkContent"
                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                    <Border Name="ContentElement"
                            BorderBrush="#FFFFFFFF"
                            BorderThickness="1" />
                    <Border Name="watermark_decorator"
                            VerticalAlignment="Center"
                            Padding="0,0,0,0">
                        <ContentControl Name="PART_Watermark"
                                        Margin="6,0,0,0"
                                        Focusable="False"
                                        IsHitTestVisible="False"
                                        Opacity="0" />
                    </Border>
                    <ScrollViewer Name="PART_ContentHost"
                                  Margin="0"
                                  HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                  SnapsToDevicePixels="True" />
                    <Border Name="FocusVisual"
                            BorderBrush="#FF45D6FA"
                            CornerRadius="0"
                            IsHitTestVisible="False"
                            Opacity="0" />
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="Border" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="watermark_decorator" Property="Border.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroDatePickerTextBox" TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroGrayColorBrush}" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.Padding" Value="2" />
        <Setter Property="Control.Background" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="Control.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="Control.Template" Value="{StaticResource metroDatePickerTextBoxTemplate}" />
    </Style>
    <ControlTemplate x:Key="metroDatePickerTemplate" TargetType="{x:Type DatePicker}">
        <Border Background="{TemplateBinding Control.Background}"
                BorderBrush="{TemplateBinding Control.BorderBrush}"
                BorderThickness="{TemplateBinding Control.BorderThickness}"
                Padding="{TemplateBinding Control.Padding}">
            <Border.Child>
                <Grid Name="PART_Root"
                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                    <Grid.Resources>
                        <ControlTemplate x:Key="DatePickerButton" TargetType="{x:Type Button}">
                            <Grid>
                                <Grid Width="19"
                                      Height="18"
                                      Margin="0"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Background="#11FFFFFF"
                                      FlowDirection="LeftToRight"
                                      TextBlock.Foreground="{StaticResource LightColorBrush}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20*" />
                                        <ColumnDefinition Width="20*" />
                                        <ColumnDefinition Width="20*" />
                                        <ColumnDefinition Width="20*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="23*" />
                                        <RowDefinition Height="19*" />
                                        <RowDefinition Height="19*" />
                                        <RowDefinition Height="19*" />
                                    </Grid.RowDefinitions>
                                    <Border Name="Background"
                                            Grid.Row="1"
                                            Grid.RowSpan="3"
                                            Grid.ColumnSpan="4"
                                            Margin="0,-1,0,0"
                                            Background="#FF1F3B53"
                                            BorderBrush="#FF4C535C"
                                            BorderThickness="1"
                                            CornerRadius=".5"
                                            Opacity="1" />
                                    <Border Name="BackgroundGradient"
                                            Grid.Row="1"
                                            Grid.RowSpan="3"
                                            Grid.ColumnSpan="4"
                                            Margin="0,-1,0,0"
                                            Background="{StaticResource DarkColorBrush}"
                                            BorderBrush="{StaticResource MetroGrayColorBrush}"
                                            BorderThickness="1"
                                            Opacity="1" />
                                    <Rectangle Name="Header"
                                               Grid.RowSpan="1"
                                               Grid.ColumnSpan="4"
                                               Fill="{StaticResource DarkColorBrush}"
                                               Stroke="{StaticResource MetroGrayColorBrush}"
                                               StrokeThickness="1" />
                                    <Path Name="ButtonContent"
                                          Grid.Row="1"
                                          Grid.RowSpan="3"
                                          Grid.Column="0"
                                          Grid.ColumnSpan="4"
                                          Margin="4,3,4,3"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Data="M11.426758,8.4305077L11.749023,8.4305077 11.749023,16.331387 10.674805,16.331387 10.674805,10.299648 9.0742188,11.298672 9.0742188,10.294277C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 M14.65086,8.4305077L18.566387,8.4305077 18.566387,9.3435936 15.671368,9.3435936 15.671368,11.255703C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 15.560365,16.438808 14.951641,16.234707 14.468243,15.826504L14.881817,14.929531C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 15.83071,11.873379 15.399232,12.079271 15.016094,12.491055L14.65086,12.238613z"
                                          Fill="{StaticResource LightColorBrush}"
                                          RenderTransformOrigin="0.5,0.5"
                                          Stretch="Fill" />
                                    <Ellipse Grid.ColumnSpan="4"
                                             Width="3"
                                             Height="3"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"
                                             Fill="{StaticResource LightColorBrush}"
                                             StrokeThickness="0" />
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                    <Setter TargetName="Header" Property="UIElement.Opacity" Value="{StaticResource MouseOverOpacity}" />
                                    <Setter TargetName="BackgroundGradient" Property="Border.Background" Value="{StaticResource MetroAccentColorBrush}" />
                                    <Setter TargetName="ButtonContent" Property="Shape.Fill" Value="{StaticResource lightBrush}" />
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter TargetName="BackgroundGradient" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
                                    <Setter TargetName="Header" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
                                    <Setter TargetName="ButtonContent" Property="Shape.Fill" Value="{StaticResource DisabledForegroundBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <DatePickerTextBox Name="PART_TextBox"
                                       Grid.Row="0"
                                       Grid.Column="0"
                                       HorizontalContentAlignment="Stretch"
                                       VerticalContentAlignment="Stretch"
                                       Focusable="{TemplateBinding UIElement.Focusable}"
                                       Foreground="{StaticResource LightColorBrush}"
                                       Style="{StaticResource metroDatePickerTextBox}" />
                    <Button Name="PART_Button"
                            Grid.Row="0"
                            Grid.Column="1"
                            Width="20"
                            Margin="3,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Focusable="False"
                            Foreground="#FFFF0000"
                            Template="{StaticResource DatePickerButton}" />
                    <Grid Name="PART_DisabledVisual"
                          Grid.Row="0"
                          Grid.Column="0"
                          Grid.ColumnSpan="2"
                          IsHitTestVisible="False"
                          Opacity="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Popup Name="PART_Popup"
                               AllowsTransparency="True"
                               Placement="Bottom"
                               PlacementTarget="{Binding ElementName=PART_TextBox}"
                               StaysOpen="False" />
                    </Grid>
                </Grid>
            </Border.Child>
        </Border>
    </ControlTemplate>
    <Style x:Key="metroDatePicker" TargetType="{x:Type DatePicker}">

        <Setter Property="DatePicker.IsTodayHighlighted" Value="True" />
        <Setter Property="DatePicker.SelectedDateFormat" Value="Short" />
        <Setter Property="Control.Background" Value="#00FFFFFF" />
        <Setter Property="Control.Padding" Value="0" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Control.VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="DatePicker.CalendarStyle" Value="{StaticResource metroCalendar}" />
        <Setter Property="Control.Template" Value="{StaticResource metroDatePickerTemplate}" />
    </Style>
    <ControlTemplate x:Key="metroListViewItemTemplate" TargetType="{x:Type ListBoxItem}">
        <Border Background="{TemplateBinding Control.Background}"
                BorderBrush="{TemplateBinding Control.BorderBrush}"
                BorderThickness="{TemplateBinding Control.BorderThickness}"
                Padding="{TemplateBinding Control.Padding}"
                SnapsToDevicePixels="True">
            <GridViewRowPresenter Columns="{TemplateBinding GridView.ColumnCollection}"
                                  Content="{TemplateBinding ContentControl.Content}"
                                  TextBlock.Foreground="{TemplateBinding Control.Foreground}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Control.Background" Value="{StaticResource MetroAccentColorBrush}" />
                <Setter Property="Control.Foreground" Value="{StaticResource lightBrush}" />
            </Trigger>
            <Trigger Property="ListBoxItem.IsSelected" Value="True">
                <Setter Property="Control.Background" Value="{StaticResource MetroAccentColorBrush}" />
                <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Control.Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroListViewItem" TargetType="{x:Type ListViewItem}">

        <Setter Property="Control.Padding" Value="2" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Template" Value="{StaticResource metroListViewItemTemplate}" />
    </Style>
    <Style x:Key="invisibleThumbStyleListView" TargetType="{x:Type Thumb}">
        <Setter Property="FrameworkElement.MinWidth" Value="{DynamicResource {x:Static SystemParameters.ResizeFrameVerticalBorderWidthKey}}" />
        <Setter Property="FrameworkElement.MinHeight" Value="{DynamicResource {x:Static SystemParameters.ResizeFrameHorizontalBorderHeightKey}}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Background="#00FFFFFF" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="metroGridViewColumnHeaderTemplate" TargetType="{x:Type GridViewColumnHeader}">
        <Grid>
            <Border Name="mainBorder"
                    Background="{StaticResource MetroAccentColorBrush}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" />
            <Border Name="boundBorder"
                    Background="{TemplateBinding Control.Background}"
                    Opacity="0.3" />
            <ContentPresenter Margin="0,2,0,2"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              TextElement.Foreground="{TemplateBinding TextElement.Foreground}" />
            <Border Width="1"
                    Margin="0,4,0,4"
                    HorizontalAlignment="Right"
                    Background="{StaticResource lightBrush}" />
            <Thumb Name="PART_HeaderGripper"
                   Width="6"
                   HorizontalAlignment="Right"
                   Style="{StaticResource invisibleThumbStyleListView}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
                <Setter TargetName="mainBorder" Property="Border.Background" Value="{StaticResource DarkColorBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False" />
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroGridViewColumnHeader" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Control.Background" Value="{StaticResource MetroAccentColorBrush}" />
        <Setter Property="Control.Foreground" Value="{StaticResource lightBrush}" />
        <Setter Property="Control.BorderThickness" Value="0,1,0,1" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
        <Setter Property="Control.Template" Value="{StaticResource metroGridViewColumnHeaderTemplate}" />
    </Style>
    <Style x:Key="MetroGridViewScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <DockPanel Margin="{TemplateBinding Control.Padding}">
                            <ScrollViewer DockPanel.Dock="Top"
                                          Focusable="False"
                                          ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                          ScrollViewer.VerticalScrollBarVisibility="Hidden">
                                <GridViewHeaderRowPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                                    <GridViewHeaderRowPresenter.Columns>
                                        <Binding Path="TemplatedParent.View.Columns" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </GridViewHeaderRowPresenter.Columns>
                                </GridViewHeaderRowPresenter>
                            </ScrollViewer>
                            <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                                    CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                                    Content="{TemplateBinding ContentControl.Content}"
                                                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                    KeyboardNavigation.DirectionalNavigation="Local"
                                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </DockPanel>
                        <ScrollBar Name="PART_HorizontalScrollBar"
                                   Grid.Row="1"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
                                   Minimum="0.0"
                                   Orientation="Horizontal"
                                   ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                                   Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding Path=HorizontalOffset,
                                                   RelativeSource={RelativeSource TemplatedParent},
                                                   Mode=OneWay}" />
                        <ScrollBar Name="PART_VerticalScrollBar"
                                   Grid.Column="1"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                                   Minimum="0.0"
                                   Orientation="Vertical"
                                   ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                                   Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding Path=VerticalOffset,
                                                   RelativeSource={RelativeSource TemplatedParent},
                                                   Mode=OneWay}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="metroListViewTemplate" TargetType="{x:Type ListView}">
        <Border Name="Border"
                Background="{TemplateBinding Control.Background}"
                BorderBrush="{TemplateBinding Control.BorderBrush}"
                BorderThickness="{TemplateBinding Control.BorderThickness}"
                Padding="{TemplateBinding Control.Padding}">
            <ScrollViewer Style="{StaticResource MetroGridViewScrollViewerStyle}">
                <ItemsPresenter />
            </ScrollViewer>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Control.Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                <Setter Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroListView" TargetType="{x:Type ListView}">
        <Style.Resources>
            <Style BasedOn="{StaticResource metroGridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}" />
        </Style.Resources>

        <Setter Property="Control.Background" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="ItemsControl.ItemContainerStyle" Value="{StaticResource metroListViewItem}" />
        <Setter Property="Control.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
        <Setter Property="Control.Template" Value="{StaticResource metroListViewTemplate}" />
        <Style.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Control.Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="metroPage" TargetType="{x:Type Page}">

        <Setter Property="Page.Background" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="Page.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Page.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Page.FontFamily" Value="{StaticResource DefaultFontFamily}" />
    </Style>
    <RotateTransform x:Key="rightArrow" Angle="90" CenterX="4" CenterY="4" />
    <RotateTransform x:Key="leftArrow" Angle="-90" CenterX="4" CenterY="4" />
    <ControlTemplate x:Key="metroExpanderDownToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Rectangle Name="Rectangle"
                       Grid.Column="0"
                       Margin="0"
                       Fill="#FFFFFFFF" />
            <Border Name="ArrowRectangle"
                    Grid.Column="0"
                    Background="{StaticResource MetroAccentColorBrush}"
                    BorderBrush="{StaticResource MetroAccentColorBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" />
            <Path Name="Arrow"
                  Grid.Column="0"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z"
                  Fill="{StaticResource lightBrush}" />
            <ContentPresenter Grid.Column="1"
                              Margin="4"
                              RecognizesAccessKey="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="ArrowRectangle" Property="UIElement.Opacity" Value="{StaticResource MouseOverOpacity}" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
                <Setter TargetName="ArrowRectangle" Property="UIElement.Opacity" Value="{StaticResource PressedOpacity}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Arrow" Property="Path.Data" Value="M0,3C0,3 0,4 0,4 0,4 3,4 3,4 3,4 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 7,4 7,4 7,4 7,3 7,3 7,3 6,3 6,3 6,3 6,2 6,2 6,2 5,2 5,2 5,2 5,1 5,1 5,1 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3z" />
                <Setter TargetName="Arrow" Property="FrameworkElement.Margin" Value="0,0,0,2" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Control.Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                <Setter TargetName="ArrowRectangle" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
                <Setter TargetName="Rectangle" Property="Shape.Fill" Value="{StaticResource DarkColorBrush}" />
                <Setter TargetName="Arrow" Property="Shape.Fill" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="metroExpanderUpToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Rectangle Name="Rectangle"
                       Grid.Column="0"
                       Margin="0"
                       Fill="#FFFFFFFF" />
            <Border Name="ArrowRectangle"
                    Grid.Column="0"
                    Background="{StaticResource MetroAccentColorBrush}"
                    BorderBrush="{StaticResource MetroAccentColorBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" />
            <Path Name="Arrow"
                  Grid.Column="0"
                  Margin="0,0,0,2"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,3C0,3 0,4 0,4 0,4 3,4 3,4 3,4 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 7,4 7,4 7,4 7,3 7,3 7,3 6,3 6,3 6,3 6,2 6,2 6,2 5,2 5,2 5,2 5,1 5,1 5,1 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3z"
                  Fill="{StaticResource lightBrush}" />
            <ContentPresenter Grid.Column="1"
                              Margin="4"
                              RecognizesAccessKey="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="ArrowRectangle" Property="UIElement.Opacity" Value="{StaticResource MouseOverOpacity}" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
                <Setter TargetName="ArrowRectangle" Property="UIElement.Opacity" Value="{StaticResource PressedOpacity}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Arrow" Property="Path.Data" Value="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z" />
                <Setter TargetName="Arrow" Property="FrameworkElement.Margin" Value="0" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Control.Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                <Setter TargetName="ArrowRectangle" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
                <Setter TargetName="Rectangle" Property="Shape.Fill" Value="{StaticResource DarkColorBrush}" />
                <Setter TargetName="Arrow" Property="Shape.Fill" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="metroExpanderRightToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Rectangle Name="Rectangle"
                       Grid.Column="0"
                       Margin="0"
                       Fill="#FFFFFFFF" />
            <Border Name="ArrowRectangle"
                    Grid.Column="0"
                    Background="{StaticResource MetroAccentColorBrush}"
                    BorderBrush="{StaticResource MetroAccentColorBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" />
            <Grid>
                <Path Name="Arrow"
                      Grid.Column="0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M0,3C0,3 0,4 0,4 0,4 3,4 3,4 3,4 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 7,4 7,4 7,4 7,3 7,3 7,3 6,3 6,3 6,3 6,2 6,2 6,2 5,2 5,2 5,2 5,1 5,1 5,1 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3z"
                      Fill="{StaticResource lightBrush}">
                    <Path.RenderTransform>
                        <RotateTransform Angle="90" CenterX="4" CenterY="4" />
                    </Path.RenderTransform>
                </Path>
            </Grid>
            <ContentPresenter Grid.Column="1"
                              Margin="4"
                              RecognizesAccessKey="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="ArrowRectangle" Property="UIElement.Opacity" Value="{StaticResource MouseOverOpacity}" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
                <Setter TargetName="ArrowRectangle" Property="UIElement.Opacity" Value="{StaticResource PressedOpacity}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Arrow" Property="UIElement.RenderTransform" Value="{StaticResource leftArrow}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Control.Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                <Setter TargetName="ArrowRectangle" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
                <Setter TargetName="Rectangle" Property="Shape.Fill" Value="{StaticResource DarkColorBrush}" />
                <Setter TargetName="Arrow" Property="Shape.Fill" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="metroExpanderLeftToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Rectangle Name="Rectangle"
                       Grid.Column="0"
                       Margin="0"
                       Fill="#FFFFFFFF" />
            <Border Name="ArrowRectangle"
                    Grid.Column="0"
                    Background="{StaticResource MetroAccentColorBrush}"
                    BorderBrush="{StaticResource MetroAccentColorBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" />
            <Path Name="Arrow"
                  Grid.Column="0"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,3C0,3 0,4 0,4 0,4 3,4 3,4 3,4 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 7,4 7,4 7,4 7,3 7,3 7,3 6,3 6,3 6,3 6,2 6,2 6,2 5,2 5,2 5,2 5,1 5,1 5,1 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3z"
                  Fill="{StaticResource lightBrush}">
                <Path.RenderTransform>
                    <RotateTransform Angle="-90" CenterX="4" CenterY="4" />
                </Path.RenderTransform>
            </Path>
            <ContentPresenter Grid.Column="1"
                              Margin="4"
                              RecognizesAccessKey="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="ArrowRectangle" Property="UIElement.Opacity" Value="{StaticResource MouseOverOpacity}" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
                <Setter TargetName="ArrowRectangle" Property="UIElement.Opacity" Value="{StaticResource PressedOpacity}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="Arrow" Property="UIElement.RenderTransform" Value="{StaticResource rightArrow}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Control.Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                <Setter TargetName="ArrowRectangle" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
                <Setter TargetName="Rectangle" Property="Shape.Fill" Value="{StaticResource DarkColorBrush}" />
                <Setter TargetName="Arrow" Property="Shape.Fill" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroExpanderDownToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Control.Background" Value="#00FFFFFF" />
        <Setter Property="Control.Template" Value="{StaticResource metroExpanderDownToggleButtonTemplate}" />
    </Style>
    <Style x:Key="metroExpanderUpToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Control.Background" Value="#00FFFFFF" />
        <Setter Property="Control.Template" Value="{StaticResource metroExpanderUpToggleButtonTemplate}" />
    </Style>
    <Style x:Key="metroExpanderRightToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Control.Background" Value="#00FFFFFF" />
        <Setter Property="Control.Template" Value="{StaticResource metroExpanderRightToggleButtonTemplate}" />
    </Style>
    <Style x:Key="metroExpanderLeftToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Control.Background" Value="#00FFFFFF" />
        <Setter Property="Control.Template" Value="{StaticResource metroExpanderLeftToggleButtonTemplate}" />
    </Style>
    <ControlTemplate x:Key="metroExpanderTemplate" TargetType="{x:Type Expander}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Name="leftColumnDefinition" Width="0" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Name="rightColumnDefinition" Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Name="topRowDefinition" Height="0" />
                <RowDefinition Height="Auto" />
                <RowDefinition Name="bottomRowDefinition" Height="*" />
            </Grid.RowDefinitions>
            <Border Name="mainBorder"
                    Grid.Row="1"
                    Grid.Column="1"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="0"
                    CornerRadius="0,0,0,0">
                <ToggleButton Name="toggle"
                              Content="{TemplateBinding HeaderedContentControl.Header}"
                              ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                              IsChecked="{Binding Path=IsExpanded,
                                                  Mode=TwoWay,
                                                  RelativeSource={RelativeSource TemplatedParent}}"
                              Style="{StaticResource metroExpanderDownToggleButtonStyle}"
                              TextElement.Foreground="{TemplateBinding Control.Foreground}" />
            </Border>
            <Border Name="ExpandSite"
                    Grid.Row="2"
                    Grid.RowSpan="1"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{StaticResource MetroAccentColorBrush}"
                    BorderThickness="1"
                    CornerRadius="0,0,0,0"
                    Visibility="Collapsed">
                <ContentPresenter Margin="{TemplateBinding Control.Padding}"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                  Focusable="False" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Expander.IsExpanded" Value="True">
                <Setter TargetName="ExpandSite" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Control.Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                <Setter TargetName="ExpandSite" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Up">
                <Setter TargetName="ExpandSite" Property="Grid.Row" Value="0" />
                <Setter TargetName="topRowDefinition" Property="RowDefinition.Height" Value="*" />
                <Setter TargetName="bottomRowDefinition" Property="RowDefinition.Height" Value="0" />
                <Setter TargetName="toggle" Property="FrameworkElement.Style" Value="{StaticResource metroExpanderUpToggleButtonStyle}" />
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Right">
                <Setter TargetName="ExpandSite" Property="Grid.Row" Value="1" />
                <Setter TargetName="ExpandSite" Property="Grid.RowSpan" Value="2" />
                <Setter TargetName="ExpandSite" Property="Grid.Column" Value="2" />
                <Setter TargetName="ExpandSite" Property="Grid.ColumnSpan" Value="1" />
                <Setter TargetName="toggle" Property="FrameworkElement.Style" Value="{StaticResource metroExpanderRightToggleButtonStyle}" />
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Left">
                <Setter TargetName="ExpandSite" Property="Grid.Row" Value="1" />
                <Setter TargetName="ExpandSite" Property="Grid.RowSpan" Value="2" />
                <Setter TargetName="ExpandSite" Property="Grid.Column" Value="0" />
                <Setter TargetName="ExpandSite" Property="Grid.ColumnSpan" Value="1" />
                <Setter TargetName="leftColumnDefinition" Property="ColumnDefinition.Width" Value="*" />
                <Setter TargetName="rightColumnDefinition" Property="ColumnDefinition.Width" Value="0" />
                <Setter TargetName="toggle" Property="FrameworkElement.Style" Value="{StaticResource metroExpanderLeftToggleButtonStyle}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroExpander" TargetType="{x:Type Expander}">

        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.Background" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
        <Setter Property="Control.Template" Value="{StaticResource metroExpanderTemplate}" />
    </Style>
    <DataTemplate x:Key="expandTreeViewGlyph">
        <Canvas Width="9" Height="9">
            <Path Canvas.Left="0"
                  Canvas.Top="0"
                  Width="9"
                  Height="9"
                  Data="M0,0L8,4 0,8z"
                  Fill="{StaticResource MetroGrayColorBrush}"
                  Opacity="1"
                  Stretch="Fill"
                  Stroke="{StaticResource DarkColorBrush}"
                  StrokeThickness="1" />
        </Canvas>
    </DataTemplate>
    <DataTemplate x:Key="collapseTreeViewGlyph">
        <Canvas Width="9" Height="9">
            <Path Canvas.Left="0"
                  Canvas.Top="0"
                  Width="9"
                  Height="9"
                  Data="M0,0L8,4 0,8z"
                  Fill="{StaticResource MetroGrayColorBrush}"
                  Opacity="1"
                  Stretch="Fill"
                  Stroke="{StaticResource DarkColorBrush}"
                  StrokeThickness="1">
                <Path.RenderTransform>
                    <RotateTransform Angle="90" CenterX="4" CenterY="4" />
                </Path.RenderTransform>
            </Path>
        </Canvas>
    </DataTemplate>
    <ControlTemplate x:Key="ToggleButtonTreeView" TargetType="{x:Type ToggleButton}">
        <Grid>
            <ContentPresenter Name="mainContent" ContentTemplate="{StaticResource expandTreeViewGlyph}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="mainContent" Property="ContentPresenter.ContentTemplate" Value="{StaticResource collapseTreeViewGlyph}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="metroTreeViewItemTemplate" TargetType="{x:Type TreeViewItem}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="19" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <ToggleButton Name="Expander"
                          ClickMode="Press"
                          IsChecked="{Binding Path=IsExpanded,
                                              RelativeSource={RelativeSource TemplatedParent}}"
                          Template="{StaticResource ToggleButtonTreeView}" />
            <Border Name="Bd"
                    Grid.Column="1"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Padding="{TemplateBinding Control.Padding}">
                <ContentPresenter Name="PART_Header"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  ContentSource="Header" />
            </Border>
            <ItemsPresenter Name="ItemsHost"
                            Grid.Row="1"
                            Grid.Column="1"
                            Grid.ColumnSpan="2" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="False">
                <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="HeaderedItemsControl.HasHeader" Value="False" />
                    <Condition Property="FrameworkElement.Width" Value="Auto" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Header" Property="FrameworkElement.MinWidth" Value="75" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="HeaderedItemsControl.HasHeader" Value="False" />
                    <Condition Property="FrameworkElement.Height" Value="Auto" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Header" Property="FrameworkElement.MinHeight" Value="19" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="TreeViewItem.IsSelected" Value="True" />
                    <Condition Property="TreeViewItem.IsSelectionActive" Value="False" />
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Control.Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="metroTreeViewTemplate" TargetType="{x:Type TreeView}">
        <Border Name="Border"
                Background="{TemplateBinding Control.Background}"
                BorderBrush="{TemplateBinding Control.BorderBrush}"
                BorderThickness="{TemplateBinding Control.BorderThickness}"
                CornerRadius="1">
            <ScrollViewer Name="scrollViewer"
                          Focusable="False"
                          Padding="4"
                          ScrollViewer.CanContentScroll="False">
                <ItemsPresenter />
            </ScrollViewer>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
                <Setter TargetName="scrollViewer" Property="ScrollViewer.CanContentScroll" Value="True" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroTreeViewItem" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Control.Template" Value="{StaticResource metroTreeViewItemTemplate}" />
        <Setter Property="Control.Foreground" Value="{StaticResource LightColorBrush}" />
        <Style.Triggers>
            <Trigger Property="TreeViewItem.IsSelected" Value="True">
                <Setter Property="Control.Foreground" Value="{StaticResource lightBrush}" />
                <Setter Property="Control.Background" Value="{StaticResource MetroAccentColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="metroTreeView" TargetType="{x:Type TreeView}">

        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Background" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroGrayColorBrush}" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ItemsControl.ItemContainerStyle" Value="{StaticResource metroTreeViewItem}" />
        <Setter Property="Control.Template" Value="{StaticResource metroTreeViewTemplate}" />
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsControl.ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}" TargetType="{x:Type ContentControl}">
        <Border Background="{StaticResource DarkColorBrush}"
                BorderBrush="{StaticResource MetroAccentColorBrush}"
                BorderThickness="1">
            <Grid>
                <Rectangle Width="28"
                           Margin="2"
                           HorizontalAlignment="Left"
                           Fill="{StaticResource DarkColorBrush}" />
                <Rectangle Width="1"
                           Margin="30,2,0,2"
                           HorizontalAlignment="Left"
                           Fill="{StaticResource DarkColorBrush}" />
                <Rectangle Width="1"
                           Margin="31,2,0,2"
                           HorizontalAlignment="Left"
                           Fill="{StaticResource DarkColorBrush}" />
                <ContentPresenter Grid.ColumnSpan="2" Margin="1,0" />
            </Grid>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="SubmenuItemTemplate" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Rectangle Name="Rec1"
                       Fill="{TemplateBinding Control.Background}"
                       Stroke="{TemplateBinding Control.BorderBrush}"
                       StrokeThickness="1" />
            <Rectangle Name="Bg" StrokeThickness="1" />
            <Rectangle Name="InnerBorder" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                                      MinWidth="24"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="37" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                <Border Name="GlyphPanel"
                        Width="22"
                        Height="22"
                        Margin="1"
                        Background="{StaticResource DarkColorBrush}"
                        BorderBrush="{DynamicResource menuGlyphIsHighlightedBorderBrush}"
                        BorderThickness="1"
                        Visibility="Hidden">
                    <Path Name="Glyph"
                          Width="9"
                          Height="11"
                          Data="{StaticResource Checkmark}"
                          Fill="{StaticResource LightColorBrush}"
                          FlowDirection="LeftToRight" />
                </Border>
                <ContentPresenter Grid.Column="2"
                                  Margin="{TemplateBinding Control.Padding}"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                <TextBlock Grid.Column="4"
                           Margin="{TemplateBinding Control.Padding}"
                           Text="{TemplateBinding MenuItem.InputGestureText}" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="Bg" Property="Shape.Fill" Value="#FFFFFFFF" />
            </Trigger>
            <Trigger Property="MenuItem.Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="MenuItem.IsChecked" Value="True">
                <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                <Setter TargetName="GlyphPanel" Property="Border.Background" Value="{DynamicResource menuGlyphIsHighlightedBackgroundBrush}" />
                <Setter TargetName="GlyphPanel" Property="Border.BorderBrush" Value="{DynamicResource menuGlyphIsHighlightedBorderBrush}" />
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="True">
                <Setter TargetName="InnerBorder" Property="Shape.Fill" Value="{StaticResource MetroAccentColorBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="UIElement.Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="MenuScrollButton"
           BasedOn="{x:Null}"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="ButtonBase.ClickMode" Value="Hover" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <DockPanel Background="{StaticResource DarkColorBrush}" SnapsToDevicePixels="True">
                        <Border Background="{StaticResource DarkColorBrush}">
                            <ContentPresenter Name="ContentContainer"
                                              Margin="1"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="metroMenuScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border Grid.Row="1" Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Control.Padding}" />
                        </Border>
                        <RepeatButton Grid.Row="0"
                                      Grid.Column="0"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="False"
                                      Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="0"
                                              FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource UpArrow}" Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                        </RepeatButton>
                        <RepeatButton Grid.Row="2"
                                      Grid.Column="0"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="False"
                                      Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="100"
                                              FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource DownArrow}" Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="TopLevelItemTemplate" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Rectangle Name="OuterBorder" />
            <Border Name="Bg"
                    Margin="1"
                    Background="#00FFFFFF"
                    BorderBrush="#00FFFFFF"
                    BorderThickness="1,1,1,1" />
            <Rectangle Name="InnerBorder" Fill="{StaticResource MetroAccentColorBrush}" />
            <DockPanel>
                <ContentPresenter Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                <Path Name="GlyphPanel"
                      Margin="7,0,0,0"
                      VerticalAlignment="Center"
                      Data="{StaticResource Checkmark}"
                      Fill="{TemplateBinding Control.Foreground}"
                      FlowDirection="LeftToRight"
                      Visibility="Collapsed" />
                <ContentPresenter Name="menuText"
                                  Margin="{TemplateBinding Control.Padding}"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                  TextElement.Foreground="{StaticResource lightBrush}" />
            </DockPanel>
            <Popup Name="PART_Popup"
                   AllowsTransparency="True"
                   Focusable="False"
                   HorizontalOffset="1"
                   IsOpen="{Binding Path=IsSubmenuOpen,
                                    RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                   VerticalOffset="0">
                <Border Background="{StaticResource DarkColorBrush}"
                        BorderBrush="{StaticResource MetroAccentColorBrush}"
                        BorderThickness="1,1,1,1">
                    <ContentControl Name="SubMenuBorder"
                                    Margin="2"
                                    IsTabStop="False">
                        <ScrollViewer ScrollViewer.CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <ItemsPresenter Margin="0"
                                            Grid.IsSharedSizeScope="True"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </ContentControl>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="Bg" Property="Border.Background" Value="#FFFFFFFF" />
                <Setter TargetName="InnerBorder" Property="UIElement.Opacity" Value="{StaticResource MouseOverOpacity}" />
            </Trigger>
            <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="MenuItem.Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="MenuItem.IsChecked" Value="True">
                <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="True">
                <Setter TargetName="Bg" Property="Border.Background" Value="#FFFFFFFF" />
                <Setter TargetName="Bg" Property="UIElement.Opacity" Value="{StaticResource MouseOverOpacity}" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                <Setter Property="Control.BorderThickness" Value="1,1,1,0" />
                <Setter TargetName="Bg" Property="Border.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
                <Setter TargetName="Bg" Property="Border.Background" Value="{StaticResource MetroAccentColorBrush}" />
                <Setter TargetName="Bg" Property="Border.BorderThickness" Value="1,1,1,0" />
                <Setter TargetName="Bg" Property="FrameworkElement.Margin" Value="1,1,1,0" />
            </Trigger>
            <Trigger Property="MenuItem.IsSubmenuOpen" Value="True">
                <Setter TargetName="Bg" Property="Border.Background" Value="#FFFFFFFF" />
                <Setter TargetName="InnerBorder" Property="Shape.Fill" Value="{StaticResource MetroAccentColorBrush}" />
                <Setter TargetName="InnerBorder" Property="UIElement.Opacity" Value="{StaticResource PressedOpacity}" />
                <Setter Property="Control.BorderThickness" Value="1,1,1,0" />
                <Setter TargetName="Bg" Property="Border.BorderThickness" Value="1,1,1,0" />
                <Setter TargetName="Bg" Property="FrameworkElement.Margin" Value="1,1,1,0" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="Bg" Property="Border.Background" Value="#FFFFFFFF" />
                <Setter TargetName="Bg" Property="UIElement.Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SubmenuHeaderTemplate" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Rectangle Fill="{StaticResource DarkColorBrush}"
                       Stroke="{TemplateBinding Control.BorderBrush}"
                       StrokeThickness="{TemplateBinding Control.BorderThickness}" />
            <Rectangle Name="Bg" StrokeThickness="1" />
            <Rectangle Name="InnerBorder" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                                      MinWidth="24"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="37" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                <Border Name="GlyphPanel"
                        Width="22"
                        Height="22"
                        Margin="1"
                        Background="{DynamicResource menuIsHighlightedBackgroundBrush}"
                        BorderBrush="{DynamicResource menuIsHighlightedBorderBrush}"
                        BorderThickness="1"
                        CornerRadius="0,0,0,0"
                        Visibility="Hidden">
                    <Path Name="Glyph"
                          Width="9"
                          Height="11"
                          Data="{StaticResource Checkmark}"
                          Fill="{DynamicResource DarkColorBrush}"
                          FlowDirection="LeftToRight" />
                </Border>
                <ContentPresenter Grid.Column="2"
                                  Margin="{TemplateBinding Control.Padding}"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                <TextBlock Grid.Column="4"
                           Margin="{TemplateBinding Control.Padding}"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Visibility="Collapsed" />
                <Path Grid.Column="5"
                      Margin="4,0,0,0"
                      VerticalAlignment="Center"
                      Data="{StaticResource RightArrow}"
                      Fill="{TemplateBinding Control.Foreground}" />
            </Grid>
            <Popup Name="PART_Popup"
                   AllowsTransparency="True"
                   Focusable="False"
                   HorizontalOffset="2"
                   IsOpen="{Binding Path=IsSubmenuOpen,
                                    RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Right"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                   VerticalOffset="0">
                <ContentControl Name="SubMenuBorder"
                                IsTabStop="False"
                                Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent,
                                                                                 TypeInTargetAssembly={x:Type FrameworkElement}}}">
                    <ScrollViewer ScrollViewer.CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                        <ItemsPresenter Margin="2"
                                        Grid.IsSharedSizeScope="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        KeyboardNavigation.TabNavigation="Cycle"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </ScrollViewer>
                </ContentControl>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="MenuItem.Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="MenuItem.IsChecked" Value="True">
                <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="True">
                <Setter TargetName="InnerBorder" Property="Shape.Fill" Value="{StaticResource MetroAccentColorBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="UIElement.Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroMenuItem" TargetType="{x:Type MenuItem}">

        <Setter Property="Control.HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.Background" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="TextElement.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.Template" Value="{StaticResource SubmenuItemTemplate}" />
        <Style.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Control.Foreground" Value="{StaticResource lightBrush}" />
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
                <Setter Property="Control.Padding" Value="7,2,8,3" />
                <Setter Property="Control.Template" Value="{StaticResource TopLevelItemTemplate}" />
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="TopLevelItem">
                <Setter Property="Control.Padding" Value="7,2,8,3" />
                <Setter Property="Control.Template" Value="{StaticResource TopLevelItemTemplate}" />
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
                <Setter Property="Control.Padding" Value="2,3,2,3" />
                <Setter Property="Control.Template" Value="{StaticResource SubmenuHeaderTemplate}" />
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="SubmenuItem">
                <Setter Property="Control.Padding" Value="2,3,2,3" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="metroMenuSeparator" TargetType="{x:Type Separator}">
        <Setter Property="FrameworkElement.MinHeight" Value="1" />
        <Setter Property="FrameworkElement.Margin" Value="0,0,3,0" />
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="26" />
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border Grid.RowSpan="2"
                                Grid.Column="0"
                                Background="{StaticResource DarkColorBrush}" />
                        <Border Grid.RowSpan="2"
                                Grid.Column="1"
                                Background="{StaticResource MetroAccentColorBrush}" />
                        <Border Grid.Column="2" Background="{StaticResource MetroAccentColorBrush}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
           BasedOn="{StaticResource metroMenuSeparator}"
           TargetType="{x:Type Separator}" />
    <Style x:Key="metroMenu" TargetType="{x:Type Menu}">

        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Foreground" Value="{StaticResource lightBrush}" />
        <Setter Property="Control.Background" Value="{StaticResource MetroAccentColorBrush}" />
    </Style>
    <Style x:Key="metroToolBarSeparator" TargetType="{x:Type Separator}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <StackPanel Margin="3,5,3,5" Orientation="Horizontal">
                        <Rectangle Width="1" Fill="{StaticResource LightColorBrush}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="FrameworkElement.Cursor" Value="SizeAll" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Border Background="#00FFFFFF" SnapsToDevicePixels="True">
                            <Rectangle Margin="1,1">
                                <Rectangle.Fill>
                                    <DrawingBrush TileMode="Tile"
                                                  Viewbox="0,0,8,8"
                                                  ViewboxUnits="Absolute"
                                                  Viewport="0,0,4,4"
                                                  ViewportUnits="Absolute">
                                        <DrawingBrush.Drawing>
                                            <DrawingGroup>
                                                <DrawingGroup.Children>
                                                    <GeometryDrawing Brush="{StaticResource MetroAccentColorBrush}" Geometry="M4,4L4,8 8,8 8,4z" />
                                                </DrawingGroup.Children>
                                            </DrawingGroup>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border Background="{StaticResource MetroAccentColorBrush}" SnapsToDevicePixels="True">
                            <Rectangle Margin="0,0">
                                <Rectangle.Fill>
                                    <DrawingBrush TileMode="Tile"
                                                  Viewbox="0,0,8,8"
                                                  ViewboxUnits="Absolute"
                                                  Viewport="0,0,4,4"
                                                  ViewportUnits="Absolute">
                                        <DrawingBrush.Drawing>
                                            <DrawingGroup>
                                                <DrawingGroup.Children>
                                                    <GeometryDrawing Brush="{StaticResource lightBrush}" Geometry="M4,4L4,8 8,8 8,4z" />
                                                </DrawingGroup.Children>
                                            </DrawingGroup>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToolBarOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="Bd"
                            Background="{StaticResource DarkColorBrush}"
                            CornerRadius="0"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Path Name="Arrow"
                                  Margin="2,3"
                                  VerticalAlignment="Bottom"
                                  Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z"
                                  Fill="{StaticResource LightColorBrush}" />
                            <ContentPresenter />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource MetroAccentColorBrush}" />
                            <Setter TargetName="Arrow" Property="Shape.Fill" Value="{StaticResource lightBrush}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource MetroAccentColorBrush}" />
                            <Setter TargetName="Arrow" Property="Shape.Fill" Value="{StaticResource lightBrush}" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Shape.Fill" Value="{StaticResource DisabledBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="metroVerticalToolBarSeparator" TargetType="{x:Type Separator}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <StackPanel Margin="5,3,5,3" Orientation="Vertical">
                        <Rectangle Height="1" Fill="{StaticResource LightColorBrush}" />
                        <Rectangle Height="1" Fill="{StaticResource MetroAccentColorBrush}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToolBarVerticalThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="FrameworkElement.Cursor" Value="SizeAll" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Margin="2,0,3,0">
                        <Border Background="#00FFFFFF" SnapsToDevicePixels="True">
                            <Rectangle Margin="1,1">
                                <Rectangle.Fill>
                                    <DrawingBrush TileMode="Tile"
                                                  Viewbox="0,0,8,8"
                                                  ViewboxUnits="Absolute"
                                                  Viewport="0,0,4,4"
                                                  ViewportUnits="Absolute">
                                        <DrawingBrush.Drawing>
                                            <DrawingGroup>
                                                <DrawingGroup.Children>
                                                    <GeometryDrawing Brush="{StaticResource MetroAccentColorBrush}" Geometry="M4,4L4,8 8,8 8,4z" />
                                                </DrawingGroup.Children>
                                            </DrawingGroup>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border Background="#00FFFFFF" SnapsToDevicePixels="True">
                            <Rectangle Margin="0,0">
                                <Rectangle.Fill>
                                    <DrawingBrush TileMode="Tile"
                                                  Viewbox="0,0,8,8"
                                                  ViewboxUnits="Absolute"
                                                  Viewport="0,0,4,4"
                                                  ViewportUnits="Absolute">
                                        <DrawingBrush.Drawing>
                                            <DrawingGroup>
                                                <DrawingGroup.Children>
                                                    <GeometryDrawing Brush="{StaticResource LightColorBrush}" Geometry="M4,4L4,8 8,8 8,4z" />
                                                </DrawingGroup.Children>
                                            </DrawingGroup>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="Bd"
                            Background="{StaticResource DarkColorBrush}"
                            CornerRadius="0"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Path Name="Arrow"
                                  Margin="2,3"
                                  HorizontalAlignment="Right"
                                  Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z"
                                  Fill="{StaticResource LightColorBrush}" />
                            <ContentPresenter />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource MetroAccentColorBrush}" />
                        </Trigger>
                        <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                            <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource MetroAccentColorBrush}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource MetroAccentColorBrush}" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Shape.Fill" Value="{StaticResource DisabledBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="metroToolBar" TargetType="{x:Type ToolBar}">
        <Style.Resources>
            <Style BasedOn="{StaticResource metroButton}" TargetType="{x:Type Button}" />
            <Style BasedOn="{StaticResource metroToggleButton}" TargetType="{x:Type ToggleButton}" />
            <Style BasedOn="{StaticResource metroCheckBox}" TargetType="{x:Type CheckBox}" />
            <Style BasedOn="{StaticResource metroRadioButton}" TargetType="{x:Type RadioButton}" />
            <Style BasedOn="{StaticResource metroComboBox}" TargetType="{x:Type ComboBox}" />
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
                <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
                <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="UIElement.AllowDrop" Value="True" />
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border Name="Border"
                                    Background="{StaticResource DarkColorBrush}"
                                    BorderBrush="{StaticResource MetroAccentColorBrush}"
                                    BorderThickness="1"
                                    Padding="2">
                                <ScrollViewer Name="PART_ContentHost" Margin="0" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
                                    <Setter Property="Control.Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>

        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Control.BorderThickness" Value="0,1,1,1" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
        <Setter Property="Control.Padding" Value="1,1,2,2" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <ControlTemplate.Resources>
                        <Style x:Key="ToolBar.SeparatorStyleKey"
                               BasedOn="{StaticResource metroToolBarSeparator}"
                               TargetType="{x:Type Separator}">
                            <!--  <x:StaticExtension.Key>ToolBar.SeparatorStyleKey</x:StaticExtension.Key>  -->
                        </Style>
                    </ControlTemplate.Resources>
                    <Border Name="Border"
                            Background="{StaticResource DarkColorBrush}"
                            BorderBrush="{StaticResource MetroAccentColorBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            CornerRadius="0">
                        <Grid>
                            <Border Background="{TemplateBinding Control.Background}" Opacity="0.5" />
                            <DockPanel>
                                <ToggleButton ClickMode="Press"
                                              DockPanel.Dock="Right"
                                              IsChecked="{Binding Path=IsOverflowOpen,
                                                                  Mode=TwoWay,
                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                              IsEnabled="{TemplateBinding ToolBar.HasOverflowItems}"
                                              Style="{StaticResource ToolBarOverflowButtonStyle}">
                                    <Popup Name="OverflowPopup"
                                           AllowsTransparency="True"
                                           Focusable="False"
                                           IsOpen="{Binding Path=IsOverflowOpen,
                                                            RelativeSource={RelativeSource TemplatedParent}}"
                                           Placement="Bottom"
                                           PopupAnimation="Slide"
                                           StaysOpen="False">
                                        <Border Name="DropDownBorder"
                                                Background="{StaticResource DarkColorBrush}"
                                                BorderBrush="{StaticResource MetroAccentColorBrush}"
                                                BorderThickness="1">
                                            <ToolBarOverflowPanel Name="PART_ToolBarOverflowPanel"
                                                                  Margin="2"
                                                                  FocusVisualStyle="{x:Null}"
                                                                  Focusable="True"
                                                                  KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                  KeyboardNavigation.TabNavigation="Cycle"
                                                                  WrapWidth="200" />
                                        </Border>
                                    </Popup>
                                </ToggleButton>
                                <Thumb Name="ToolBarThumb"
                                       Width="6"
                                       Style="{StaticResource ToolBarThumbStyle}" />
                                <ToolBarPanel Name="PART_ToolBarPanel"
                                              Margin="{TemplateBinding Control.Padding}"
                                              IsItemsHost="True" />
                            </DockPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToolBar.IsOverflowOpen" Value="True">
                            <Setter TargetName="ToolBarThumb" Property="UIElement.IsEnabled" Value="False" />
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked" Value="True">
                            <Setter TargetName="ToolBarThumb" Property="UIElement.Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Style.Triggers>
            <Trigger Property="ToolBar.Orientation" Value="Vertical">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToolBar}">
                            <ControlTemplate.Resources>
                                <Style x:Key="ToolBar.SeparatorStyleKey"
                                       BasedOn="{StaticResource metroVerticalToolBarSeparator}"
                                       TargetType="{x:Type Separator}" />
                            </ControlTemplate.Resources>
                            <Border Name="Border"
                                    Background="{StaticResource DarkColorBrush}"
                                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                                    CornerRadius="0">
                                <Grid>
                                    <Border Background="{TemplateBinding Control.Background}" Opacity="0.5" />
                                    <DockPanel>
                                        <ToggleButton ClickMode="Press"
                                                      DockPanel.Dock="Bottom"
                                                      IsChecked="{Binding Path=IsOverflowOpen,
                                                                          Mode=TwoWay,
                                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                                      IsEnabled="{TemplateBinding ToolBar.HasOverflowItems}"
                                                      Style="{StaticResource ToolBarVerticalOverflowButtonStyle}">
                                            <Popup Name="OverflowPopup"
                                                   AllowsTransparency="True"
                                                   Focusable="False"
                                                   IsOpen="{Binding Path=IsOverflowOpen,
                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                   Placement="Bottom"
                                                   PopupAnimation="Slide"
                                                   StaysOpen="False">
                                                <Border Name="DropDownBorder"
                                                        Background="{StaticResource DarkColorBrush}"
                                                        BorderBrush="{StaticResource MetroAccentColorBrush}"
                                                        BorderThickness="1">
                                                    <ToolBarOverflowPanel Name="PART_ToolBarOverflowPanel"
                                                                          Margin="2"
                                                                          FocusVisualStyle="{x:Null}"
                                                                          Focusable="True"
                                                                          KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                          KeyboardNavigation.TabNavigation="Cycle"
                                                                          WrapWidth="200" />
                                                </Border>
                                            </Popup>
                                        </ToggleButton>
                                        <Thumb Name="ToolBarThumb"
                                               Height="6"
                                               DockPanel.Dock="Top"
                                               Style="{StaticResource ToolBarVerticalThumbStyle}" />
                                        <ToolBarPanel Name="PART_ToolBarPanel"
                                                      Margin="{TemplateBinding Control.Padding}"
                                                      IsItemsHost="True" />
                                    </DockPanel>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ToolBar.IsOverflowOpen" Value="True">
                                    <Setter TargetName="ToolBarThumb" Property="UIElement.IsEnabled" Value="False" />
                                </Trigger>
                                <Trigger Property="ToolBarTray.IsLocked" Value="True">
                                    <Setter TargetName="ToolBarThumb" Property="UIElement.Visibility" Value="Collapsed" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{x:Type ToolBarTray}" TargetType="{x:Type ToolBarTray}">
        <Setter Property="ToolBarTray.Background" Value="{StaticResource DarkColorBrush}" />
    </Style>
    <Style x:Key="{x:Static ToolBar.MenuStyleKey}"
           BasedOn="{StaticResource metroMenu}"
           TargetType="{x:Type Menu}">
        <Style.Resources>
            <Style BasedOn="{StaticResource metroMenuItem}" TargetType="{x:Type MenuItem}" />
        </Style.Resources>
    </Style>
    <ControlTemplate x:Key="metroResizeGripTemplate" TargetType="{x:Type ResizeGrip}">
        <Grid Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
            <Path Margin="0,0,2,2"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Bottom"
                  Data="M8,0L10,0 10,2 8,2z M4,4L6,4 6,6 4,6z M8,4L10,4 10,6 8,6z M0,8L2,8 2,10 0,10z M4,8L6,8 6,10 4,10z M8,8L10,8 10,10 8,10z"
                  Fill="{StaticResource DarkColorBrush}" />
            <Path Margin="0,0,3,3"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Bottom"
                  Data="M8,0L10,0 10,2 8,2z M4,4L6,4 6,6 4,6z M8,4L10,4 10,6 8,6z M0,8L2,8 2,10 0,10z M4,8L6,8 6,10 4,10z M8,8L10,8 10,10 8,10z"
                  Fill="{TemplateBinding Control.Foreground}" />
        </Grid>
    </ControlTemplate>
    <Style x:Key="metroResizeGrip" TargetType="{x:Type ResizeGrip}">

        <Setter Property="FrameworkElement.MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="FrameworkElement.MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
        <Setter Property="Control.Background" Value="#00FFFFFF" />
        <Setter Property="Control.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.Template" Value="{StaticResource metroResizeGripTemplate}" />
    </Style>
    <Style x:Key="metroGridSplitter" TargetType="{x:Type GridSplitter}">

        <Setter Property="Control.Background" Value="{StaticResource LightColorBrush}" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    </Style>
    <Style x:Key="{x:Static DataGridColumnHeader.ColumnHeaderDropSeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Control.Background" Value="#FF000080" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            SnapsToDevicePixels="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="metroSelectAllButtonTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Border Name="mainBorder"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" />
            <Border Width="1"
                    Margin="0,4,0,4"
                    HorizontalAlignment="Right"
                    Background="{StaticResource DarkColorBrush}" />
            <Polygon Name="Arrow"
                     Margin="8,8,3,3"
                     HorizontalAlignment="Right"
                     VerticalAlignment="Bottom"
                     Fill="{StaticResource LightColorBrush}"
                     Opacity="0.25"
                     Points="0,10 10,10 10,0"
                     Stretch="Uniform" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
                <Setter TargetName="mainBorder" Property="Border.Background" Value="{StaticResource AccentHoverBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="Arrow" Property="UIElement.Opacity" Value="{StaticResource MouseOverOpacity}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="mainBorder" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type DataGrid}, ResourceId=DataGridSelectAllButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.MinHeight" Value="24" />
        <Setter Property="FrameworkElement.MinWidth" Value="20" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="Control.BorderThickness" Value="0,0,0,1" />
        <Setter Property="Control.Background" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="Control.Template" Value="{StaticResource metroSelectAllButtonTemplate}" />
    </Style>
    <Style x:Key="metroDataGridRow" TargetType="{x:Type DataGridRow}">
        <Setter Property="Control.Background" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="FrameworkElement.MinHeight" Value="22" />
        <Setter Property="DataGridRow.ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Margin="2,0,0,0"
                               VerticalAlignment="Center"
                               Text="!"
                               TextBlock.Foreground="#FFFF0000" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="metroDataGrid" TargetType="{x:Type DataGrid}">

        <Setter Property="Control.Background" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="DataGrid.AlternatingRowBackground" Value="#FFEDEEF0" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Foreground" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource MetroAccentColorBrush}" />
        <Setter Property="DataGrid.GridLinesVisibility" Value="None" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="DataGrid.RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Style.Triggers>
            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <DataTemplate x:Key="ascendingSortGlyph">
        <Border Width="9" Height="5">
            <Path Data="M4.53125,0.15625C4.53125,0.15625 9,5 9,5 9,5 0,5 0,5 0,5 4.53125,0.15625 4.53125,0.15625z"
                  Fill="{Binding RelativeSource={RelativeSource Self},
                                 Path=(TextElement.Foreground)}"
                  Opacity="1" />
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="descendingSortGlyph">
        <Border Width="9" Height="5">
            <Path Data="M4.53125,5C4.53125,5 9,0.15625 9,0.15625 9,0.15625 0,0.15625 0,0.15625 0,0.15625 4.53125,5 4.53125,5z"
                  Fill="{Binding RelativeSource={RelativeSource Self},
                                 Path=(TextElement.Foreground)}"
                  Opacity="1" />
        </Border>
    </DataTemplate>
    <Style x:Key="invisibleThumbStyleColumnHeader" TargetType="{x:Type Thumb}">
        <Setter Property="FrameworkElement.Cursor" Value="SizeWE" />
        <Setter Property="FrameworkElement.MinWidth" Value="{DynamicResource {x:Static SystemParameters.ResizeFrameVerticalBorderWidthKey}}" />
        <Setter Property="FrameworkElement.MinHeight" Value="{DynamicResource {x:Static SystemParameters.ResizeFrameHorizontalBorderHeightKey}}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Background="#00FFFFFF" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="metroDataGridColumnHeaderTemplate" TargetType="{x:Type DataGridColumnHeader}">
        <Grid>
            <Border Name="BackBorder" Background="#FFFFFFFF" />
            <Border Name="mainBorder"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Padding="{TemplateBinding Control.Padding}">
                <Grid Margin="2,0,2,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter Grid.Column="0"
                                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                      Content="{TemplateBinding ContentControl.Content}"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    <ContentPresenter Name="SortGlyphPresenter"
                                      Grid.Column="1"
                                      Content="{x:Null}"
                                      IsHitTestVisible="False" />
                </Grid>
            </Border>
            <Border Width="1"
                    Margin="0,4,0,4"
                    HorizontalAlignment="Right"
                    Background="#00FFFFFF" />
            <Thumb Name="PART_RightHeaderGripper"
                   Width="6"
                   HorizontalAlignment="Right"
                   Style="{StaticResource invisibleThumbStyleColumnHeader}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="mainBorder" Property="UIElement.Opacity" Value="{StaticResource MouseOverOpacity}" />
                <Setter TargetName="PART_RightHeaderGripper" Property="Control.Background" Value="#FFFF0000" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
                <Setter TargetName="mainBorder" Property="UIElement.Opacity" Value="{StaticResource PressedOpacity}" />
            </Trigger>
            <Trigger Property="DataGridColumnHeader.SortDirection" Value="Ascending">
                <Setter TargetName="SortGlyphPresenter" Property="ContentPresenter.ContentTemplate" Value="{StaticResource ascendingSortGlyph}" />
            </Trigger>
            <Trigger Property="DataGridColumnHeader.SortDirection" Value="Descending">
                <Setter TargetName="SortGlyphPresenter" Property="ContentPresenter.ContentTemplate" Value="{StaticResource descendingSortGlyph}" />
            </Trigger>
            <Trigger Property="DataGridColumnHeader.SortDirection" Value="{x:Null}">
                <Setter TargetName="SortGlyphPresenter" Property="ContentPresenter.ContentTemplate" Value="{x:Null}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="mainBorder" Property="UIElement.Opacity" Value="{StaticResource DisabledOpacity}" />
                <Setter TargetName="BackBorder" Property="Border.Background" Value="{StaticResource DarkColorBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroDataGridColumnHeader" TargetType="{x:Type DataGridColumnHeader}">

        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="FrameworkElement.MinHeight" Value="24" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="Control.BorderThickness" Value="0,0,0,1" />
        <Setter Property="Control.Padding" Value="4,0,0,0" />
        <Setter Property="FrameworkElement.Margin" Value="2" />
        <Setter Property="Control.Background" Value="{StaticResource MetroAccentColorBrush}" />
        <Setter Property="Control.Foreground" Value="{StaticResource lightBrush}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.Template" Value="{StaticResource metroDataGridColumnHeaderTemplate}" />
    </Style>
    <Style x:Key="metroDataGridCell"
           BasedOn="{StaticResource {x:Type DataGridCell}}"
           TargetType="{x:Type DataGridCell}">

        <Setter Property="Control.Background" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Style.Triggers>
            <Trigger Property="DataGridCell.IsSelected" Value="True">
                <Setter Property="Control.Background" Value="{StaticResource MetroAccentColorBrush}" />
                <Setter Property="Control.Foreground" Value="{StaticResource lightBrush}" />
                <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="True">
                <Setter Property="Control.BorderBrush" Value="{StaticResource FocusBorderBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />
    <Style x:Key="invisibleHorizontalThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="FrameworkElement.Cursor" Value="SizeNS" />
        <Setter Property="FrameworkElement.MinWidth" Value="{DynamicResource {x:Static SystemParameters.ResizeFrameVerticalBorderWidthKey}}" />
        <Setter Property="FrameworkElement.MinHeight" Value="{DynamicResource {x:Static SystemParameters.ResizeFrameHorizontalBorderHeightKey}}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Background="#00FFFFFF" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="metroDataGridRowHeaderTemplate" TargetType="{x:Type DataGridRowHeader}">
        <Grid>
            <Border Name="mainBorder" Background="{TemplateBinding Control.Background}">
                <StackPanel HorizontalAlignment="Center"
                            VerticalAlignment="Top"
                            Orientation="Horizontal">
                    <ContentPresenter Name="mainContent"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    <Control SnapsToDevicePixels="False"
                             Template="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},
                                                Path=ValidationErrorTemplate}"
                             Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},
                                                  Path=(Validation.HasError),
                                                  Converter={StaticResource bool2VisibilityConverter}}" />
                </StackPanel>
            </Border>
            <Thumb Name="PART_BottomHeaderGripper"
                   Height="6"
                   VerticalAlignment="Bottom"
                   Cursor="SizeNS"
                   Style="{StaticResource invisibleHorizontalThumbStyle}" />
            <Border Margin="4,0,4,0"
                    VerticalAlignment="Bottom"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" />
            <Path Name="PathContent"
                  Margin="0,4,0,0"
                  HorizontalAlignment="Center"
                  Data="M5,4.46875C5,4.46875 0,0 0,0 0,0 0,9 0,9 0,9 5,4.46875 5,4.46875z"
                  Fill="{StaticResource LightColorBrush}"
                  Opacity="1"
                  Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="DataGridRowHeader.IsRowSelected" Value="True">
                <Setter TargetName="PathContent" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="mainBorder" Property="Border.Background" Value="{StaticResource MetroAccentColorBrush}" />
                <Setter TargetName="PathContent" Property="Shape.Fill" Value="{StaticResource lightBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="PathContent" Property="Shape.Fill" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="metroDataGridRowHeader" TargetType="{x:Type DataGridRowHeader}">

        <Setter Property="FrameworkElement.MinWidth" Value="20" />
        <Setter Property="Control.Background" Value="{StaticResource DarkColorBrush}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Control.BorderThickness" Value="0,0,0,0" />
        <Setter Property="Control.Template" Value="{StaticResource metroDataGridRowHeaderTemplate}" />
    </Style>

</ResourceDictionary>